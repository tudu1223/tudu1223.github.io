<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>pwn之旅 （二）</title>
      <link href="/2024/11/16/pwn%E4%B9%8B%E6%97%85-%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2024/11/16/pwn%E4%B9%8B%E6%97%85-%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="pwn之旅（二）"><a href="#pwn之旅（二）" class="headerlink" title="pwn之旅（二）"></a>pwn之旅（二）</h1><h2 id="一、初识GDB"><a href="#一、初识GDB" class="headerlink" title="一、初识GDB"></a>一、初识GDB</h2><p>1.设置断点 b（任意字母） *xxxxxxxx（地址）</p><p> i b（对应字母）步入</p><p>2.ni 单步</p><p>3.i r 观察寄存器的值</p><p>4.disassemble xxxxx（如$rip） 反编译</p><p>5.j（xx）汇编指令</p><p><img src="/pwn%E4%B9%8B%E6%97%85-%EF%BC%88%E4%BA%8C%EF%BC%89.assets/jcc.png" alt="jcc"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pwn之旅 （一）</title>
      <link href="/2024/11/08/pwn%E4%B9%8B%E6%97%85-%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2024/11/08/pwn%E4%B9%8B%E6%97%85-%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="pwn之旅（一）"><a href="#pwn之旅（一）" class="headerlink" title="pwn之旅（一）"></a>pwn之旅（一）</h1><h2 id="一、ELF文件以及前置知识"><a href="#一、ELF文件以及前置知识" class="headerlink" title="一、ELF文件以及前置知识"></a>一、ELF文件以及前置知识</h2><h3 id="1-关键名词"><a href="#1-关键名词" class="headerlink" title="1.关键名词"></a>1.关键名词</h3><p>exploit：用于攻击的脚本与方案</p><p>payload：攻击载荷，是目标进程被劫持控制流的数据</p><p>shellcode：调用攻击目标的shell的代码</p><p>elf文件：在Linux上编译的可执行文件（.out,.so,.a）</p><p>动态链接库：.so</p><p>静态链接库：.a</p><p>磁盘中才叫ELF，内存中叫映像，ELF有两个头（header），一个节（sections），第一个头包括整个结构信息，</p><h2 id="二、Linux基本操作"><a href="#二、Linux基本操作" class="headerlink" title="二、Linux基本操作"></a>二、Linux基本操作</h2><p>1.cd：进入主目录</p><p>2.pwd：查看当前所在目录</p><p>3.ls：看当前目录的子目录</p><p>4，-a：查看子目录更详细的信息</p><p>5.touch：创建文件，用空格隔开可同时创建多个</p><p>6.cat：查看文件内容</p><p>7.rm 文件名：删除某文件</p><p>8.mkdir：创建新目录规则同touch</p><p>9.cp 文件名 目录名：复制文件至</p><p>10.mv：同上，移动</p><p>11.在10的基础上加上&#x2F;文件名，可以进行重命名</p><p>12.man查看用法，q退出</p><p>13.chmod +r&#x2F;w&#x2F;x 文件名，修改可读可写可执行权限</p><p>14.执行用.&#x2F;</p><p>15.可以通过<code> readelf -h &lt;elf_name&gt;</code> 来查看头部信息</p><p>16.su 切换到超级用户</p><p>17.cd ..上一级目录</p><h2 id="三、工具操作指令"><a href="#三、工具操作指令" class="headerlink" title="三、工具操作指令"></a>三、工具操作指令</h2><h3 id="1-file-指令"><a href="#1-file-指令" class="headerlink" title="1.file 指令"></a>1.file 指令</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">file</span> <span class="keyword">ts</span></span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ts</span>: ELF <span class="number">64</span>-bit LSB pie executable, x86-<span class="number">64</span>, version <span class="number">1</span> (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-<span class="number">64</span>.so.<span class="number">2</span>, </span><br><span class="line"><span class="attribute">BuildID</span>[sha1]=<span class="number">93</span>f72a0d1b001212ba5860a6a1da7e57a36e3f47, for GNU/Linux <span class="number">3</span>.<span class="number">2</span>.<span class="number">0</span>, not stripped</span><br></pre></td></tr></table></figure><h3 id="2-nm-指令"><a href="#2-nm-指令" class="headerlink" title="2.nm 指令"></a>2.nm 指令</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">nm</span> <span class="keyword">ts</span> </span><br></pre></td></tr></table></figure><h3 id="3-readelf-指令"><a href="#3-readelf-指令" class="headerlink" title="3.readelf 指令"></a>3.readelf 指令</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readelf -<span class="selector-tag">a</span> ts</span><br></pre></td></tr></table></figure><h3 id="4-checksec"><a href="#4-checksec" class="headerlink" title="4.checksec"></a>4.checksec</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checksec <span class="attribute">--file</span>=pwn1 </span><br></pre></td></tr></table></figure><h3 id="5-hexdump-指令"><a href="#5-hexdump-指令" class="headerlink" title="5.hexdump 指令"></a>5.hexdump 指令</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexdump ts</span></span><br></pre></td></tr></table></figure><h3 id="6-strings-指令"><a href="#6-strings-指令" class="headerlink" title="6.strings 指令"></a>6.strings 指令</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>s ts</span><br></pre></td></tr></table></figure><h3 id="7-objdump-指令"><a href="#7-objdump-指令" class="headerlink" title="7.objdump 指令"></a>7.objdump 指令</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">objdump -d ts</span></span><br></pre></td></tr></table></figure><h3 id="8-ldd-指令"><a href="#8-ldd-指令" class="headerlink" title="8.ldd 指令"></a>8.ldd 指令</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ldd</span> ts</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>编程作业汇总</title>
      <link href="/2024/11/05/%E7%BC%96%E7%A8%8B%E4%BD%9C%E4%B8%9A%E6%B1%87%E6%80%BB/"/>
      <url>/2024/11/05/%E7%BC%96%E7%A8%8B%E4%BD%9C%E4%B8%9A%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>24.11.5后均在此更新，ctrl+f可以直接搜索</p><span id="more"></span><h1 id="编程作业4（24-11-5）"><a href="#编程作业4（24-11-5）" class="headerlink" title="编程作业4（24.11.5）"></a>编程作业4（24.11.5）</h1><h2 id="1、【程序文件名】zy3-1-cpp"><a href="#1、【程序文件名】zy3-1-cpp" class="headerlink" title="1、【程序文件名】zy3-1.cpp"></a>1、【程序文件名】zy3-1.cpp</h2><p>【题目描述】编写一程序，功能是：从键盘输入一个小于1000的正数，输出它的自然对数（小数保留2位）。要求在输入数据后先对其进行检查是否为小于1000的正数。若不是，则重新输入，直到输入符合要求为止。例如：输入：99，输出：4.60；输入：555，输出：6.32；输入：999，输出：6.91。注：math.h头文件中的自然对数函数log。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">double</span> num;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;num);</span><br><span class="line">        <span class="keyword">if</span> (num &lt;= <span class="number">0</span> || num &gt;= <span class="number">1000</span>) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (num &lt;= <span class="number">0</span> || num &gt;= <span class="number">1000</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>, <span class="built_in">log</span>(num));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、【程序文件名】zy3-2-cpp"><a href="#2、【程序文件名】zy3-2-cpp" class="headerlink" title="2、【程序文件名】zy3-2.cpp"></a>2、【程序文件名】zy3-2.cpp</h2><p>【题目描述】编程一程序，功能是：求1到n之间能同时被3和7整除的整数之和。其中，n由键盘输入。例如：输入：100，输出：210；输入：500，输出：5796；输入：1000，输出：23688。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">21</span>; i &lt;= n; i += <span class="number">21</span>) &#123;</span><br><span class="line">        sum += i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、【程序文件名】zy3-3-cpp"><a href="#3、【程序文件名】zy3-3-cpp" class="headerlink" title="3、【程序文件名】zy3-3.cpp"></a>3、【程序文件名】zy3-3.cpp</h2><p>【题目描述】编程一程序，功能是：求1!+2!+3!+…+n!的值。其中，n由键盘输入。例如：输入：3，输出：9；输入：5，输出：153；输入：8，输出：46233。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> f = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        f*= i;</span><br><span class="line">        sum += f;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="编程作业5（24-11-8）"><a href="#编程作业5（24-11-8）" class="headerlink" title="编程作业5（24.11.8）"></a>编程作业5（24.11.8）</h1><h2 id="1、【程序文件名】zy4-1-cpp"><a href="#1、【程序文件名】zy4-1-cpp" class="headerlink" title="1、【程序文件名】zy4-1.cpp"></a>1、【程序文件名】zy4-1.cpp</h2><p>【题目描述】编写一程序，功能是：输出所有的“水仙花数”，数间用一个空格隔开。所谓“水仙花数”是指一个3位数，其各位数字立方和等于该数本身，例如，153是“水仙花数”，因为153&#x3D;1^3+5^3+3^3。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main() &#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="built_in">num</span>, a, b, c;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">num</span> = <span class="number">100</span>; <span class="built_in">num</span> &lt;= <span class="number">999</span>; <span class="built_in">num</span>++) &#123;</span><br><span class="line">        a = <span class="built_in">num</span> / <span class="number">100</span>;        </span><br><span class="line">        b = (<span class="built_in">num</span> / <span class="number">10</span>) % <span class="number">10</span>;  </span><br><span class="line">        c = <span class="built_in">num</span> % <span class="number">10</span>; </span><br><span class="line">        <span class="keyword">if</span> (a*a*a + b*b*b + c*c*c == <span class="built_in">num</span>) &#123;</span><br><span class="line">            printf(<span class="string">&quot;%d &quot;</span>, <span class="built_in">num</span>); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、【程序文件名】zy4-2-cpp"><a href="#2、【程序文件名】zy4-2-cpp" class="headerlink" title="2、【程序文件名】zy4-2.cpp"></a>2、【程序文件名】zy4-2.cpp</h2><p>【题目描述】编程一程序，功能是：输出如下图形。其中，行数n由键盘输入。例如：</p><p>输入：5</p><p>输出：</p><p>   A</p><p>   BAB</p><p>  CBABC</p><p>  DCBABCD</p><p>  EDCBABCDE</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="string">&#x27;A&#x27;</span> + j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="string">&#x27;A&#x27;</span> + j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、【程序文件名】zy4-3-cpp"><a href="#3、【程序文件名】zy4-3-cpp" class="headerlink" title="3、【程序文件名】zy4-3.cpp"></a>3、【程序文件名】zy4-3.cpp</h2><p>【题目描述】编写一程序，功能是：输入n个数，输出它们的平均值（小数保留1位）。其中n由键盘输入。注：不能用数组。下列输入的第一个数为数据的个数，即n的值。</p><p>例如：输入：5 1 2 3 4 5，输出：3.0，输入：3 5 5 6，输出：5.3。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">double</span> sum = <span class="number">0.0</span>, num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;num);</span><br><span class="line">        sum += num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.1f\n&quot;</span>, sum / n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="实验课2（24-11-11）"><a href="#实验课2（24-11-11）" class="headerlink" title="实验课2（24.11.11）"></a>实验课2（24.11.11）</h1><h2 id="1-sy2-1"><a href="#1-sy2-1" class="headerlink" title="1.sy2-1"></a>1.sy2-1</h2><p>打开C集成开发环境，建立一个sy2-1.cpp文件，编写程序，计算以下分段函数：</p><p>​                           </p><p>从键盘上输入x的值，计算并输出y的值（保留3位小数）。运行程序，输入x的值（分别为x&lt;1、1≤x&lt;10、x≥10这3种情况，检查输出的y值是否正确。例如：</p><p>输入：-1.23，输出：7.540</p><p>输入：5.7，输出：102.470</p><p>输入：15，输出：8.832</p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;math.h&gt;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    double <span class="variable language_">x</span>, <span class="variable language_">y</span>;</span><br><span class="line">    scanf(<span class="string">&quot;%lf&quot;</span>, &amp;<span class="variable language_">x</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">x</span> &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="variable language_">y</span> = <span class="number">2</span> * <span class="variable language_">x</span> + <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">x</span> &gt;= <span class="number">1</span> &amp;&amp; <span class="variable language_">x</span> &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="variable language_">y</span> = <span class="number">3</span> * <span class="variable language_">x</span> * <span class="variable language_">x</span> + <span class="number">5</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">y</span> = <span class="built_in">sqrt</span>(<span class="number">5</span> * <span class="variable language_">x</span> + <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    printf(<span class="string">&quot;%.3f\n&quot;</span>, <span class="variable language_">y</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-sy2-2"><a href="#2-sy2-2" class="headerlink" title="2.sy2-2"></a>2.sy2-2</h2><p>打开C集成开发环境，建立一个sy2-2.cpp文件，编写程序，功能是给出一个百分制成绩，要求输出成绩等级A，B，C，D，E。90<del>100分为A，80</del>89分为B，70～79分为C，60～69分为D，60分以下为E。若输入0~100以外的数据，输出X。运行程序，输入数据并检查结果是否正确。例如：</p><p>输入：200，输出：X</p><p>输入：100，输出：A</p><p>输入：59，输出：E</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;score);</span><br><span class="line">    <span class="keyword">if</span> (score &lt; <span class="number">0</span> || score &gt; <span class="number">100</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;X\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (score / <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;A\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;B\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;C\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;D\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;E\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-sy2-3"><a href="#3-sy2-3" class="headerlink" title="3.sy2-3"></a>3.sy2-3</h2><p>打开C集成开发环境，建立一个sy2-3.cpp文件，编写程序，功能是输入某年某月某日，输出这一天是这一年的第几天。闰年的条件是：能被4整除但不能被100整除，或者能被400整除。运行程序，输入数据（年月日用英文格式“-”连接，如输入：2024-11-12）并检查结果是否正确。例如：</p><p>输入：2020-10-1，输出275</p><p>输入：2022-10-1，输出：274。</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main() &#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="built_in">year</span>, <span class="built_in">month</span>, <span class="built_in">day</span>;</span><br><span class="line">    <span class="built_in">int</span> <span class="built_in">days</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">int</span> days_in_month[] = &#123; <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span> &#125;;</span><br><span class="line">    scanf(<span class="string">&quot;%d-%d-%d&quot;</span>, &amp;<span class="built_in">year</span>, &amp;<span class="built_in">month</span>, &amp;<span class="built_in">day</span>);</span><br><span class="line">    <span class="built_in">int</span> is_leap_year = (<span class="built_in">year</span> % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; <span class="built_in">year</span> % <span class="number">100</span> != <span class="number">0</span>) || (<span class="built_in">year</span> % <span class="number">400</span> == <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">if</span> (is_leap_year) &#123;</span><br><span class="line">        days_in_month[<span class="number">1</span>] = <span class="number">29</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">month</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">days</span> += days_in_month[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">days</span> += <span class="built_in">day</span>;</span><br><span class="line">    printf(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">days</span>);</span><br><span class="line"></span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果不会数组可以看下面这种方法</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.<span class="property">h</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span>() &#123;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">year</span>, <span class="built_in">month</span>, <span class="built_in">day</span>;</span><br><span class="line">    <span class="type">int</span> days = <span class="number">0</span>;</span><br><span class="line">    <span class="title function_">scanf</span>(<span class="string">&quot;%d-%d-%d&quot;</span>, &amp;<span class="built_in">year</span>, &amp;<span class="built_in">month</span>, &amp;<span class="built_in">day</span>);</span><br><span class="line">    <span class="type">int</span> is_leap_year = (<span class="built_in">year</span> % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; <span class="built_in">year</span> % <span class="number">100</span> != <span class="number">0</span>) || (<span class="built_in">year</span> % <span class="number">400</span> == <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="built_in">month</span>; i++) &#123;</span><br><span class="line">        <span class="title function_">switch</span> (i) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>: <span class="keyword">case</span> <span class="number">3</span>: <span class="keyword">case</span> <span class="number">5</span>: <span class="keyword">case</span> <span class="number">7</span>: <span class="keyword">case</span> <span class="number">8</span>: <span class="keyword">case</span> <span class="number">10</span>: <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                days += <span class="number">31</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>: <span class="keyword">case</span> <span class="number">6</span>: <span class="keyword">case</span> <span class="number">9</span>: <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                days += <span class="number">30</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                days += is_leap_year ? <span class="number">29</span> : <span class="number">28</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    days += <span class="built_in">day</span>;</span><br><span class="line">    <span class="title function_">printf</span>(<span class="string">&quot;%d\n&quot;</span>, days);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-sy2-4"><a href="#4-sy2-4" class="headerlink" title="4.sy2-4"></a>4.sy2-4</h2><p>打开C集成开发环境，建立一个sy2-4.cpp文件，输入以下程序代码。代码的功能是从键盘输入一个字母，若是“Y”则显示“Exit”，否则显示“Continue”。</p><p>#include &lt;stdio.h&gt;</p><p>int main()</p><p>{</p><p>​    char c;</p><p>​    c&#x3D;getchar();</p><p>​    if(c&#x3D;’Y’)</p><p>​         printf(“Exit\n”);</p><p>​    else</p><p>​         printf(“Continue\n”);</p><p>​    return 0;</p><p>}</p><p>(1) 编译运行程序，输入：Y或N，查看输出结果。</p><p>(2) 对输出结果进行分析，若实际系统中存在此类问题，可能造成什么后果。</p><p>(3) 应对程序如何进行改进，以避免类似问题的发生。</p><p>(4) 若输入的字母Y，有可能是小写字母y，那么程序就如何修改。</p><p>(1) </p><p>无论输入 <code>Y</code> 还是 <code>N</code>，程序都会输出 <code>Exit</code>。</p><p>(2) </p><p>代码中的条件 <code>if (c = &#39;Y&#39;)</code> 实际上是赋值操作，而非比较操作，因此 <code>c</code> 被赋值为 <code>Y</code>，并且条件总是为真（非零），导致程序无论输入 <code>Y</code> 还是其他字符，都会输出 <code>Exit</code>。在实际系统中，类似问题可能导致程序逻辑错误，执行错误的操作。误用赋值会导致不可预料的行为，甚至造成安全漏洞。</p><p>(3)  使用 &#x3D;&#x3D; 进行比较</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    c = <span class="built_in">getchar</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (c == <span class="string">&#x27;Y&#x27;</span>) </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Exit\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Continue\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(4) </p><p>使用逻辑或条件来判断 <code>c</code> 是否等于 <code>Y</code> 或 <code>y</code>，以处理大小写不敏感的输入：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    c = <span class="built_in">getchar</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (c == <span class="string">&#x27;Y&#x27;</span> || c == <span class="string">&#x27;y&#x27;</span>) </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Exit\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Continue\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="作业五（24-11-11）"><a href="#作业五（24-11-11）" class="headerlink" title="作业五（24.11.11）"></a>作业五（24.11.11）</h1><h2 id="1、【程序文件名】zy5-1-cpp"><a href="#1、【程序文件名】zy5-1-cpp" class="headerlink" title="1、【程序文件名】zy5-1.cpp"></a>1、【程序文件名】zy5-1.cpp</h2><p>【题目描述】.编写一程序，功能是：输入n个整数，按从小到大输出这n个整数（输出时数据之间用一个空格隔开）。其中，n由键盘输入。例如：（第一个数为个数，即n的值）</p><p>运行示例1</p><p>输入：5 8 9 1 4 3</p><p>输出：1 3 4 89</p><p>运行示例2</p><p>输入：10 4 9 77 12 45 23 34 2 10 55</p><p>输出：2 4 9 10 12 23 34 45 55 99</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">int</span> numbers[n]; </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;numbers[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (numbers[j] &gt; numbers[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="type">int</span> temp = numbers[j];</span><br><span class="line">                numbers[j] = numbers[j + <span class="number">1</span>];</span><br><span class="line">                numbers[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, numbers[i]);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; n - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、【程序文件名】zy5-2-cpp"><a href="#2、【程序文件名】zy5-2-cpp" class="headerlink" title="2、【程序文件名】zy5-2.cpp"></a>2、【程序文件名】zy5-2.cpp</h2><p>【题目描述】.编程一程序，功能是：输入4*4阶矩阵，输出下三角（含主对角线）的数之和。例如：</p><p>输入：</p><p>1  2  3  4</p><p>5  6  7  8</p><p>9  10 11 12</p><p>13 14 15 16</p><p>输出：100</p><figure class="highlight stan"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;<span class="string">stdio.h</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> main() &#123;</span><br><span class="line">    <span class="type">int</span> <span class="type">matrix</span>[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line">    <span class="type">int</span> <span class="built_in">sum</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">            scanf(<span class="string">&quot;%d&quot;</span>, &amp;<span class="type">matrix</span>[i][j]);</span><br><span class="line">            <span class="keyword">if</span> (j &lt;= i) &#123;</span><br><span class="line">                <span class="built_in">sum</span> += <span class="type">matrix</span>[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">sum</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="编程作业6（24-11-15）"><a href="#编程作业6（24-11-15）" class="headerlink" title="编程作业6（24.11.15）"></a>编程作业6（24.11.15）</h1><h2 id="1、程序文件名】zy6-1-cpp"><a href="#1、程序文件名】zy6-1-cpp" class="headerlink" title="1、程序文件名】zy6-1.cpp"></a>1、程序文件名】zy6-1.cpp</h2><p>【题目描述】编写一程序，功能是：输入一个字符串，统计其中数字和非数字字符各有多少 个，输出的两个数字用1个空格隔开。例如：  输入：12abc34%6h*，输出：5 6  输入：123abc$，输出：3 4  </p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">100</span>]; </span><br><span class="line">    <span class="type">int</span> dc = <span class="number">0</span>, ndc = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; str[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">            dc++; </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ndc++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, dc, ndc);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、程序文件名】zy6-2-cpp"><a href="#2、程序文件名】zy6-2-cpp" class="headerlink" title="2、程序文件名】zy6-2.cpp"></a>2、程序文件名】zy6-2.cpp</h2><p>【题目描述】编写一程序，功能是：输入一个字符串，判断其是否为回文，即对称字符串。 例如：  输入：abcba，输出：YES  输入：abcda，输出：NO  输入：12321，输出：YES  </p><figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main() &#123;</span><br><span class="line">    char <span class="keyword">str</span>[<span class="number">100</span>]<span class="comment">;</span></span><br><span class="line">    <span class="keyword">int</span> <span class="keyword">length</span> = <span class="number">0</span>, i<span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">&quot;%s&quot;</span>, <span class="keyword">str</span>)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">str</span>[<span class="keyword">length</span>] != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">length</span>++<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span><span class="comment">; i &lt; length / 2; i++) &#123;</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">str</span>[i] != <span class="keyword">str</span>[<span class="keyword">length</span> - i - <span class="number">1</span>]) &#123;</span><br><span class="line">            printf(<span class="string">&quot;NO\n&quot;</span>)<span class="comment">; </span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">&quot;YES\n&quot;</span>)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、【程序文件名】zy6-3-cpp"><a href="#3、【程序文件名】zy6-3-cpp" class="headerlink" title="3、【程序文件名】zy6-3.cpp"></a>3、【程序文件名】zy6-3.cpp</h2><p>【题目描述】编程一程序，功能是：输入一个字符串，删除其中的数字字符。例如：  输入：abc12d45e，输出：abcde  输入：123ab$cd4，输出：ab$cd </p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="built_in">int</span> main() &#123;</span><br><span class="line">    <span class="built_in">char</span> <span class="built_in">str</span>[<span class="number">100</span>]; </span><br><span class="line">    <span class="built_in">int</span> i, j = <span class="number">0</span>;</span><br><span class="line">    scanf(<span class="string">&quot;%s&quot;</span>, <span class="built_in">str</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; <span class="built_in">str</span>[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">str</span>[i] &lt; <span class="string">&#x27;0&#x27;</span> || <span class="built_in">str</span>[i] &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">            <span class="built_in">str</span>[j++] = <span class="built_in">str</span>[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">str</span>[j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    printf(<span class="string">&quot;%s\n&quot;</span>, <span class="built_in">str</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、【程序文件名】zy6-4-cpp"><a href="#4、【程序文件名】zy6-4-cpp" class="headerlink" title="4、【程序文件名】zy6-4.cpp"></a>4、【程序文件名】zy6-4.cpp</h2><p>【题目描述】编程一程序，功能是：输入一个n×n的矩阵（其中n由键盘输入），输出每一 行数中的最大值。输出时每个数据后加一个空格，小数保留两位。例如：  输入：  3 </p><p> 4  5.3  2  </p><p>7  8   9  </p><p>11 10  6  输出：5.30 9.00 11.00   </p><p>输入：  4  </p><p>1  2  3  4</p><p>  8  7  6  5  </p><p>10 11.1 8  3  </p><p>78 80 85.5 65  输出：4.00 8.00 11.10 85.50 </p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, i, j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">double</span> matrix[n][n];</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;matrix[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">double</span> max = matrix[i][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(matrix[i][j] &gt; max) &#123;</span><br><span class="line">                max = matrix[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2f &quot;</span>, max); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="实验课三（24-11-17）"><a href="#实验课三（24-11-17）" class="headerlink" title="实验课三（24.11.17）"></a>实验课三（24.11.17）</h1><ol start="3"><li>打开C集成开发环境，建立一个sy3-3.cpp文件，编写程序，输出如下规律字母图形（本图行数n&#x3D;6），其中行数n由键盘输入，第1行左侧无空格。</li></ol><p>输入：6，输出： ABCDEFEDCBA</p><p>​         ABCDEDCBA</p><p>​           ABCDCBA</p><p>​            ABCBA</p><p>​            ABA</p><p>​             A</p><p>​    输入：3，输出：ABCBA</p><p>​          ABA</p><p>​           A</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n); </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> ch = <span class="string">&#x27;A&#x27;</span>; ch &lt; <span class="string">&#x27;A&#x27;</span> + (n - i); ch++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ch);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> ch = <span class="string">&#x27;A&#x27;</span> + (n - i - <span class="number">2</span>); ch &gt;= <span class="string">&#x27;A&#x27;</span>; ch--) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ch);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>打开C集成开发环境，建立一个sy3-4.cpp文件，编写程序，计算自然常数e近似值，精度由键盘输入q值控制，输出时显示6位小数。其中计算e公式如下：</li></ol><p>$$<br>e≈1+1&#x2F;1!+1&#x2F;2!+1&#x2F;3!+1&#x2F;4!+⋯<br>$$</p><p>例如：</p><p>输入：0.001，输出：2.718254</p><p>输入：0.0001，输出：2.718279</p><p>输入：0.00001，输出：2.718282</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">double</span> e = <span class="number">1.0</span>; </span><br><span class="line">    <span class="type">double</span> t = <span class="number">1.0</span>; </span><br><span class="line">    <span class="type">double</span> q; </span><br><span class="line">    <span class="type">int</span> n = <span class="number">1</span>; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;q);</span><br><span class="line">    <span class="keyword">while</span> (t &gt;= q) &#123;</span><br><span class="line">        t = t / n; </span><br><span class="line">        e += t;      </span><br><span class="line">        n++;         </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.6f\n&quot;</span>, e);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>打开C集成开发环境，建立一个sy3-5.cpp文件，输入如下程序代码。编程的本意是：1~100的整数，遇到5的倍数就跳出，否则累加。</li></ol><p>#include &lt;stdio.h&gt;</p><p>int main()</p><p>{</p><p>​    int i &#x3D; 1,sum &#x3D; 0;</p><p>​    while (i &lt;&#x3D; 100)</p><p>​    {</p><p>​         if(i % 5 &#x3D;&#x3D; 0)</p><p>​             continue;</p><p>​         else</p><p>​             sum +&#x3D; i;</p><p>​         i++;</p><p>​    }</p><p>​    printf(“sum&#x3D;%d”,sum);</p><p>​    return 0;</p><p>}</p><p>试分析以上程序可能存在的问题，应如何改进。</p><p>程序运行无输入，输出：sum&#x3D;4000</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">问题分析</span><br><span class="line">代码的逻辑中存在问题在于 <span class="keyword">continue</span> 语句的使用方式。</span><br><span class="line"><span class="keyword">continue</span> 语句会跳过当前循环的剩余部分，并直接开始下一次迭代。然而，在当前程序中，当 <span class="keyword">if</span>(i % <span class="number">5</span> == <span class="number">0</span>) 条件为真时，程序进入 <span class="keyword">continue</span> 分支，导致循环跳过了 i++ 的更新语句。这会形成死循环（i 始终为当前值），使程序无法跳出。</span><br><span class="line"></span><br><span class="line">问题改进</span><br><span class="line">需要确保无论是否遇到 <span class="number">5</span> 的倍数，变量 i 都能正常递增。改进的方式有以下两种：</span><br></pre></td></tr></table></figure><h3 id="改进方式-1：在-continue-之前增加-i"><a href="#改进方式-1：在-continue-之前增加-i" class="headerlink" title="改进方式 1：在 continue 之前增加 i++"></a><strong>改进方式 1：在 <code>continue</code> 之前增加 <code>i++</code></strong></h3><p>将 <code>i++</code> 放在 <code>continue</code> 语句之前，保证在跳过当前迭代之前更新 <code>i</code> 的值：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>, sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            i++;        </span><br><span class="line">            <span class="keyword">continue</span>;   </span><br><span class="line">        &#125;</span><br><span class="line">        sum += i;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum=%d&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="改进方式-2：去掉-continue，调整逻辑"><a href="#改进方式-2：去掉-continue，调整逻辑" class="headerlink" title="改进方式 2：去掉 continue，调整逻辑"></a><strong>改进方式 2：去掉 <code>continue</code>，调整逻辑</strong></h3><p>可以完全去掉 <code>continue</code>，通过增加条件语句的判断来实现同样的效果：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>, sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">5</span> != <span class="number">0</span>) &#123; </span><br><span class="line">            sum += i;     </span><br><span class="line">        &#125;</span><br><span class="line">        i++;             </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum=%d&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="编程作业七（24-11-20）"><a href="#编程作业七（24-11-20）" class="headerlink" title="编程作业七（24.11.20）"></a>编程作业七（24.11.20）</h1><h2 id="1、【程序文件名】zy7-1-cpp"><a href="#1、【程序文件名】zy7-1-cpp" class="headerlink" title="1、【程序文件名】zy7-1.cpp"></a>1、【程序文件名】zy7-1.cpp</h2><p> 【题目描述】编写一程序，功能是：统计单词个数。从键盘上输入一行字符，统计其中有多 少个单词，单词之间用空格隔开。例如：  输入：I am a student，输出：4  输入：C Program，输出：2</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main() &#123;</span><br><span class="line">    <span class="built_in">char</span> <span class="built_in">str</span>[<span class="number">1000</span>];</span><br><span class="line">    <span class="built_in">int</span> i = <span class="number">0</span>, w = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">int</span> iw = <span class="number">0</span>; </span><br><span class="line">    fgets(<span class="built_in">str</span>, sizeof(<span class="built_in">str</span>), stdin);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">str</span>[i] != <span class="string">&#x27;\0&#x27;</span> &amp;&amp; <span class="built_in">str</span>[i] != <span class="string">&#x27;\n&#x27;</span>) &#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">str</span>[i] != <span class="string">&#x27; &#x27;</span>) &#123; </span><br><span class="line">            <span class="keyword">if</span> (iw == <span class="number">0</span>) &#123;</span><br><span class="line">                w++; </span><br><span class="line">                iw = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            iw = <span class="number">0</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">&quot;%d\n&quot;</span>, w); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="2、【程序文件名】zy7-2-cpp"><a href="#2、【程序文件名】zy7-2-cpp" class="headerlink" title="2、【程序文件名】zy7-2.cpp"></a>2、【程序文件名】zy7-2.cpp</h2><p>【题目描述】编写一程序，功能是：输入n个国家名称，使用冒泡法排序从小到大排序后输 出，输出时每个名称间用一个空格隔开，其中n由键盘输入。例如：  输入：5 China France Britain Russia America  输出：America Britain China France Russia</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">char</span> c[<span class="number">100</span>][<span class="number">100</span>]; </span><br><span class="line">    <span class="type">char</span> t[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(c[j], c[j + <span class="number">1</span>]) &gt; <span class="number">0</span>) &#123; </span><br><span class="line">                <span class="built_in">strcpy</span>(t, c[j]);</span><br><span class="line">                <span class="built_in">strcpy</span>(c[j], c[j + <span class="number">1</span>]);</span><br><span class="line">                <span class="built_in">strcpy</span>(c[j + <span class="number">1</span>], t);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, c[i]);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; n - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="实验四（24-11-22）"><a href="#实验四（24-11-22）" class="headerlink" title="实验四（24.11.22）"></a>实验四（24.11.22）</h1><ol><li><p>sy4-1</p><p>打开C集成开发环境，建立一个sy4-1.cpp文件，编写一程序，输入三个整数a、b、c，并定义三个指针变量pa、pb、pc分别引用它们，并按降序输出，输出时数据间用一个空格隔开。例如：</p></li></ol><p>输入：1 3 5，输出：5 3 1</p><p>输入：50 34 65，输出：65 50 34</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main() &#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, c;</span><br><span class="line">    <span class="keyword">int</span> *pa = &amp;a, *pb = &amp;b, *pc = &amp;c;</span><br><span class="line">    scanf(<span class="string">&quot;<span class="variable">%d</span> <span class="variable">%d</span> <span class="variable">%d</span>&quot;</span>, pa, pb, pc);</span><br><span class="line">    <span class="keyword">if</span> (*pa &lt; *pb) &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = *pa;</span><br><span class="line">        *pa = *pb;</span><br><span class="line">        *pb = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (*pa &lt; *pc) &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = *pa;</span><br><span class="line">        *pa = *pc;</span><br><span class="line">        *pc = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (*pb &lt; *pc) &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = *pb;</span><br><span class="line">        *pb = *pc;</span><br><span class="line">        *pc = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">printf</span>(<span class="string">&quot;<span class="variable">%d</span> <span class="variable">%d</span> <span class="variable">%d</span>&quot;</span>, *pa, *pb, *pc);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>sy4-2</p><p>打开C集成开发环境，建立一个sy4-2.cpp文件，编写一程序，输入n个成绩，然后使用指针变量p输出高于平均值的各个成绩，输出时成绩保留1位小数，成绩间用一个空格隔开。例如：</p></li></ol><p>输入：5 76 87 67 90 60，输出：87.0 90.0</p><p>输入：10 67 87 99 76 70 87 64 45 89 80，输出：87.0 99.0 87.0 89.0 80.0</p><p>注：输入的第1个数为成绩个数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">float</span> scores[n], sum = <span class="number">0.0</span>, avg; </span><br><span class="line">    <span class="type">float</span> *p = scores;             </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, p + i);</span><br><span class="line">        sum += *(p + i); </span><br><span class="line">    &#125;</span><br><span class="line">    avg = sum / n;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (*(p + i) &gt; avg) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.1f &quot;</span>, *(p + i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>sy4-3</p><p>打开C集成开发环境，建立一个sy4-3.cpp文件，编写一程序，首先定义一个容量15的数组（如：int a[15]），输入n（n&lt;15）个数，然后使用选择法对这n个进行升序排序后输出；再输入一个数并插入到已排好序的数组中并保持有序，最后输出这n+1个数。输出时每个数据间用一个空格隔开。例如：</p></li></ol><p>输入：5 </p><p>4 5 2 9 3</p><p>第1次输出：2 3 4 5 9</p><p>再输入：6</p><p>第2次输出：2 3 4 5 6 9</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, value, a[<span class="number">15</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[j] &lt; a[i]) &#123;</span><br><span class="line">                <span class="type">int</span> temp = a[i];</span><br><span class="line">                a[i] = a[j];</span><br><span class="line">                a[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;value);</span><br><span class="line">    <span class="type">int</span> i = n - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &gt;= <span class="number">0</span> &amp;&amp; a[i] &gt; value) &#123;</span><br><span class="line">        a[i + <span class="number">1</span>] = a[i];</span><br><span class="line">        i--;</span><br><span class="line">    &#125;</span><br><span class="line">    a[i + <span class="number">1</span>] = value;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n + <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.sy4-4</p><p>打开C集成开发环境，建立一个sy4-4.cpp文件，编写一程序，输入以下4×4矩阵，并将其转置，即行列互换，然后使用指向一维数组的指针变量（int (*q)[4]）输出转置后的矩阵。输出时每个数据间用一个空格隔开。例如：</p><p>​                                  转置后    </p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main() &#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">4</span>][<span class="number">4</span>], b[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">int</span> (*<span class="keyword">q</span>)[<span class="number">4</span>] = b;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">            scanf(<span class="string">&quot;<span class="variable">%d</span>&quot;</span>, &amp;a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">            b[j][i] = a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">printf</span>(<span class="string">&quot;<span class="variable">%d</span> &quot;</span>, *(<span class="string">q[i]</span> + j)); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li><p>sy4-5</p><p>打开C集成开发环境，建立一个sy4-5.cpp文件，输入如下程序代码，编译运行。</p></li></ol><p>#include &lt;stdio.h&gt;</p><p>int main()</p><p>{</p><p>​    int i&#x3D;0;</p><p>​    int a[]&#x3D;{1,2,3,4,5,6,7,8,9,10};</p><p>​    for(i&#x3D;0;i&lt;&#x3D;10;i++)</p><p>​    {</p><p>​         a[i]&#x3D;0;</p><p>​         printf(“Hello World!\n”);</p><p>​    }</p><p>​    return 0;</p><p>}</p><p>试分析以上程序可能存在的问题，为什么，以后应如何避免出现类似的问题。</p><p><strong>数组越界访问</strong>：</p><ul><li>数组 <code>a[]</code> 被定义为包含 10 个元素（从索引 <code>0</code> 到 <code>9</code>），即它的有效索引范围是 <code>0</code> 到 <code>9</code>。</li><li><code>for(i = 0; i &lt;= 10; i++)</code> 中的循环条件会导致 <code>i</code> 在最后一次迭代时取值为 <code>10</code>，这是一个越界的索引，因为数组 <code>a[]</code> 只有索引 <code>0</code> 到 <code>9</code>。</li><li>当 <code>i = 10</code> 时，<code>a[i] = 0</code> 会访问数组 <code>a</code> 中不存在的第 11 个元素（越界），并可能导致未定义行为，如程序崩溃或内存损坏。</li></ul><p><strong>循环次数过多</strong>：</p><ul><li><p>循环应该在 <code>i = 9</code> 时停止，而不是 <code>i = 10</code>。这是因为数组 <code>a[]</code> 只有 10 个元素，索引的最大值是 <code>9</code>。</p><p>修改后</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> a[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)  <span class="comment">// 改为 i &lt; 10</span></span><br><span class="line">    &#123;</span><br><span class="line">        a[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Hello World!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="编程作业七（24-11-26）"><a href="#编程作业七（24-11-26）" class="headerlink" title="编程作业七（24.11.26）"></a>编程作业七（24.11.26）</h1><h2 id="1、【程序文件名】zy8-1-cpp"><a href="#1、【程序文件名】zy8-1-cpp" class="headerlink" title="1、【程序文件名】zy8-1.cpp"></a>1、【程序文件名】zy8-1.cpp</h2><p>【题目描述】编写两个函数comm_div和comm_mul，分别求两个整数的最大公约数和最小公 倍数，在main函数中输入两个整数，调用这两个函数并输出两个整数的最大公约数和最小 公倍数，输出时两数间用一个空格隔开。例如：  输入：48 64，输出：16 192  输入：45 88，输出：1 3960  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">comm_div</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (b != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> temp = a % b;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">comm_mul</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a * b) / <span class="built_in">comm_div</span>(a, b);  </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b); </span><br><span class="line">    <span class="type">int</span> gcd = <span class="built_in">comm_div</span>(a, b); </span><br><span class="line">    <span class="type">int</span> lcm = <span class="built_in">comm_mul</span>(a, b); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, gcd, lcm); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、【程序文件名】zy8-2-cpp"><a href="#2、【程序文件名】zy8-2-cpp" class="headerlink" title="2、【程序文件名】zy8-2.cpp"></a>2、【程序文件名】zy8-2.cpp</h2><p>【题目描述】编写一个从小到大排序（选择法）的函数sort(int x[],int n)，其中n为整 数个数。在main函数中输入n的值和一n个整数，调用排序函数sort后，输出排序后的n 个整数，每个数间用一个空格隔开。例如：  输入：5  7 2 1 8 4  输出：1 2 4 7 8  输入：10  67 56 45 89 34 21 87 32 89 12  输出：12 21 32 34 45 56 67 87 89 89  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(<span class="type">int</span> x[], <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> i, j, temp, min_index;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        min_index = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x[j] &lt; x[min_index]) &#123;</span><br><span class="line">                min_index = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (min_index != i) &#123;</span><br><span class="line">            temp = x[i];</span><br><span class="line">            x[i] = x[min_index];</span><br><span class="line">            x[min_index] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">int</span> x[n]; </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(x, n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, x[i]);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; n - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、【程序文件名】zy8-3-cpp"><a href="#3、【程序文件名】zy8-3-cpp" class="headerlink" title="3、【程序文件名】zy8-3.cpp"></a>3、【程序文件名】zy8-3.cpp</h2><p>【题目描述】编写一函数str_reverse(char c[])，功能是将一个字符串逆序存放，在main 函数中输入一个字符串，调用str_reverse函数后，输出该字符串。例如：  输入：abcd，输出：dcba  输入：12345，输出：54321</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span> </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">str_reverse</span><span class="params">(<span class="type">char</span> c[])</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(c);</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len / <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="type">char</span> temp = c[i];</span><br><span class="line">        c[i] = c[len - i - <span class="number">1</span>];</span><br><span class="line">        c[len - i - <span class="number">1</span>] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">100</span>]; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">    <span class="built_in">str_reverse</span>(str);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="作业9（24-11-30）"><a href="#作业9（24-11-30）" class="headerlink" title="作业9（24.11.30）"></a>作业9（24.11.30）</h1><h2 id="1、【程序文件名】zy9-1-cpp"><a href="#1、【程序文件名】zy9-1-cpp" class="headerlink" title="1、【程序文件名】zy9-1.cpp"></a>1、【程序文件名】zy9-1.cpp</h2><p>【题目描述】编写一个函数int add(int n)，使用递归算法求1+2+3+…+n，在main函数中 输入n，调用add函数后并输出计算结果。例如：  输入：10，输出：55  输出：100，输出：5050 </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)  </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> n + <span class="built_in">add</span>(n - <span class="number">1</span>);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">add</span>(n)); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、【程序文件名】zy9-2-cpp"><a href="#2、【程序文件名】zy9-2-cpp" class="headerlink" title="2、【程序文件名】zy9-2.cpp"></a>2、【程序文件名】zy9-2.cpp</h2><p>  【题目描述】编写一个函数void string_copy(char *f,char *t)，功能是将 f字符串得到t中（不 得使用strcpy函数），在 main函数中定义两个字符数组char x[100], y[100]，输入x字符串， 调用string_copy 函数将 x字符串复制到y中，输出y字符串。例如：  输入：12345，输出：12345  输入：abcde，输出：abcde *</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">string_copy</span><span class="params">(<span class="type">char</span> *f, <span class="type">char</span> *t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (*f != <span class="string">&#x27;\0&#x27;</span>) &#123; </span><br><span class="line">        *t = *f;          </span><br><span class="line">        f++;             </span><br><span class="line">        t++;             </span><br><span class="line">    &#125;</span><br><span class="line">    *t = <span class="string">&#x27;\0&#x27;</span>;           </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> x[<span class="number">100</span>], y[<span class="number">100</span>];   </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, x);     </span><br><span class="line">    <span class="built_in">string_copy</span>(x, y);    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、【程序文件名】zy9-3-cpp"><a href="#3、【程序文件名】zy9-3-cpp" class="headerlink" title="3、【程序文件名】zy9-3.cpp"></a>3、【程序文件名】zy9-3.cpp</h2><p>  【题目描述】编写一个从小到大排序（选择法）函数void sort(char (*p)[10],int n)，其中n为 整数个数。在main函数中输入n并输入n个国家英文名称，调用排序函数后输出。例如：  输入：5 China France Britain Russia America  输出：America Britain China France Russia</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(<span class="type">char</span> (*p)[<span class="number">10</span>], <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> minIndex = i; </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(p[j], p[minIndex]) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                minIndex = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (minIndex != i) &#123;</span><br><span class="line">            <span class="type">char</span> temp[<span class="number">10</span>];</span><br><span class="line">            <span class="built_in">strcpy</span>(temp, p[i]);</span><br><span class="line">            <span class="built_in">strcpy</span>(p[i], p[minIndex]);</span><br><span class="line">            <span class="built_in">strcpy</span>(p[minIndex], temp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">char</span> countries[n][<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, countries[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(countries, n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, countries[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="实验五（24-11-30）"><a href="#实验五（24-11-30）" class="headerlink" title="实验五（24.11.30）"></a>实验五（24.11.30）</h1><h2 id="1-sy5-1"><a href="#1-sy5-1" class="headerlink" title="1.sy5-1"></a>1.sy5-1</h2><p>   打开C集成开发环境，建立一个sy5-1.cpp文件，编写一程序，功能是输入一个字符串，输出字符串的长度，不能使用strlen函数。例如：</p><p>输入：abcd123，输出：7</p><p>输入：!@#$ABC123，输出：10</p><figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main() &#123;</span><br><span class="line">    char <span class="keyword">str</span>[<span class="number">100</span>]<span class="comment">;</span></span><br><span class="line">    <span class="keyword">int</span> <span class="keyword">length</span> = <span class="number">0</span><span class="comment">;</span></span><br><span class="line">    scanf(<span class="string">&quot;%s&quot;</span>, <span class="keyword">str</span>)<span class="comment">; </span></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">str</span>[<span class="keyword">length</span>] != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">length</span>++<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">&quot;%d&quot;</span>, <span class="keyword">length</span>)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-sy5-2"><a href="#2-sy5-2" class="headerlink" title="2.sy5-2"></a>2.sy5-2</h2><p>打开C集成开发环境，建立一个sy5-2.cpp文件，编写一程序，功能是输入一个字符串，分别统计大写字母、小写字母、数字和其它字符的个数，并输出各类字符的个数，数字间用一个空格隔开。例如：</p><p>输入：!@#$ ABC abc 123，输出：3 3 3 7</p><p>输入：&amp;*AbdEF12G4，输出：4 2 3 2</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main() &#123;</span><br><span class="line">    <span class="built_in">char</span> <span class="built_in">str</span>[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">int</span> uppercase = <span class="number">0</span>, lowercase = <span class="number">0</span>, digits = <span class="number">0</span>, others = <span class="number">0</span>;</span><br><span class="line">    fgets(<span class="built_in">str</span>, sizeof(<span class="built_in">str</span>), stdin);</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; <span class="built_in">str</span>[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">str</span>[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; <span class="built_in">str</span>[i] &lt;= <span class="string">&#x27;Z&#x27;</span>) &#123;</span><br><span class="line">            uppercase++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">str</span>[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; <span class="built_in">str</span>[i] &lt;= <span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">            lowercase++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">str</span>[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; <span class="built_in">str</span>[i] &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">            digits++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">str</span>[i] != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">            others++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">&quot;%d %d %d %d&quot;</span>, uppercase, lowercase, digits, others);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-sy5-3"><a href="#3-sy5-3" class="headerlink" title="3.sy5-3"></a>3.sy5-3</h2><p>打开C集成开发环境，建立一个sy5-3.cpp文件，编写一程序，功能是输入一个字符串，删除尾部连续的“*”号，前导和中间的保留。例如：</p><p>输入：***ab<em>c</em>12*3***<em>，输出：***ab</em>c<em>12</em>3</p><p>输入：**12<em>78</em>89，输出：*<em>12</em>78*89</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="built_in">int</span> main() &#123;</span><br><span class="line">    char <span class="built_in">str</span>[<span class="number">100</span>]; </span><br><span class="line">    scanf(<span class="string">&quot;%s&quot;</span>, <span class="built_in">str</span>);</span><br><span class="line">    <span class="built_in">int</span> <span class="built_in">len</span> = strlen(<span class="built_in">str</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">len</span> &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">str</span>[<span class="built_in">len</span> - <span class="number">1</span>] == <span class="string">&#x27;*&#x27;</span>) &#123;</span><br><span class="line">        <span class="built_in">str</span>[<span class="built_in">len</span> - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>; </span><br><span class="line">        <span class="built_in">len</span>--; </span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">&quot;%s&quot;</span>, <span class="built_in">str</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-sy5-4"><a href="#4-sy5-4" class="headerlink" title="4.sy5-4"></a>4.sy5-4</h2><p>打开C集成开发环境，建立一个sy5-4.cpp文件，编写一程序，功能是输入一个身份证号，把身份证号的第7~14位替换成*，并把末位字母转换为大写。例如：</p><p>输入：35010120031005123x，输出：350101********123X。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main() &#123;</span><br><span class="line">    char <span class="built_in">id</span>[<span class="number">19</span>]; </span><br><span class="line">    scanf(<span class="string">&quot;%18s&quot;</span>, <span class="built_in">id</span>); </span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">6</span>; i &lt;= <span class="number">13</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">id</span>[i] = <span class="string">&#x27;*&#x27;</span>; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">id</span>[<span class="number">17</span>] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; <span class="built_in">id</span>[<span class="number">17</span>] &lt;= <span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">        <span class="built_in">id</span>[<span class="number">17</span>] -= <span class="string">&#x27;a&#x27;</span> - <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">&quot;%s\n&quot;</span>, <span class="built_in">id</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-sy5-5"><a href="#5-sy5-5" class="headerlink" title="5.sy5-5"></a>5.sy5-5</h2><p>打开C集成开发环境，建立一个sy5-5.cpp文件，输入如下程序代码。</p><p>#include&lt;stdio.h&gt;</p><p>#include&lt;string.h&gt;</p><p>int main() {</p><p>​    char password[1024]; </p><p>​    int valid;</p><p>​    char buffer[8];</p><p>​    while (1) {</p><p>​         printf(“请输入密码\n”); </p><p>​         scanf(“%s”, password); </p><p>​         valid &#x3D; strcmp(password, “1234567”);</p><p>​         strcpy(buffer, password);</p><p>​         if (valid) {</p><p>​             printf(“登录失败\n”);</p><p>​         }</p><p>​         else {</p><p>​             printf(“登录成功\n”); </p><p>​             break;</p><p>​         }</p><p>​    }</p><p>​    return 0;</p><p>}</p><p>编译运行以上程序，分别输入：11111111(8位)、1234567、22222222(8位)等三个密码，观察运行情况，试分析为什么会出现这种情况，应如何避免出现类似的问题。</p><ol><li><strong>缓冲区溢出（Buffer Overflow）：</strong><ul><li><code>buffer</code> 数组定义为 <code>char buffer[8];</code>，意味着它只能存储最多7个字符（因为字符串需要结尾的 <code>\0</code> 字符）。但程序允许用户输入更长的密码，并且直接将其复制到 <code>buffer</code> 中。</li><li>在 <code>scanf(&quot;%s&quot;, password)</code> 中，用户可以输入一个超过8个字符的密码，导致 <code>password</code> 数组中存储的字符串长度可能超过 <code>buffer</code> 的最大容量。此时，使用 <code>strcpy(buffer, password)</code> 可能会造成缓冲区溢出，从而覆盖掉 <code>buffer</code> 后面的内存数据。</li></ul></li><li><strong>密码验证逻辑不安全：</strong><ul><li><code>strcmp(password, &quot;1234567&quot;)</code> 返回值的检查没有直接有效地验证密码的长度。如果用户输入的是一个有效密码（比如 <code>1234567</code>），程序会通过验证。但是，如果输入的密码过长，比如 <code>11111111</code>（8个字符），程序仍然会把密码复制到 <code>buffer</code> 中，导致溢出，最终可能会影响程序的行为。</li></ul></li></ol><h4 id="运行情况："><a href="#运行情况：" class="headerlink" title="运行情况："></a>运行情况：</h4><ol><li><strong>输入：</strong> <code>11111111</code>（8位密码）<ul><li>输入密码时，<code>password</code> 数组能够接收超过8个字符的输入，导致 <code>strcpy(buffer, password)</code> 发生缓冲区溢出。由于 <code>buffer</code> 只有8个字节，而 <code>password</code> 实际上是超过8个字节，导致 <code>buffer</code> 后面的内存被破坏。由于 <code>buffer</code> 被溢出，可能会导致程序的意外行为。</li></ul></li><li><strong>输入：</strong> <code>1234567</code>（正确密码）<ul><li>程序正常运行，通过密码验证并输出 “登录成功”。这里没有发生缓冲区溢出。</li></ul></li><li><strong>输入：</strong> <code>22222222</code>（8位密码）<ul><li>同样地，输入一个超过 <code>buffer</code> 大小的密码会导致缓冲区溢出。虽然密码是错误的，程序仍然会执行到 <code>strcpy</code>，引发潜在的内存损坏。</li></ul></li></ol><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a><strong>解决方法：</strong></h3><ol><li><strong>防止缓冲区溢出：</strong><ul><li>在读取字符串时使用 <code>scanf(&quot;%7s&quot;, password)</code> 或 <code>fgets(password, sizeof(password), stdin)</code> 来避免超出 <code>password</code> 数组的大小。</li><li>使用 <code>strncpy</code> 或其他安全函数来替代 <code>strcpy</code>，以确保不会超出 <code>buffer</code> 的大小。</li></ul></li><li><strong>密码比较的安全性：</strong><ul><li>对用户输入的密码进行长度检查。如果用户输入的密码长度大于或等于 <code>buffer</code> 的大小，可以提示错误信息，并要求用户重新输入密码。</li><li>修改后的代码</li></ul></li></ol><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> password[<span class="number">1024</span>];</span><br><span class="line">    <span class="type">int</span> valid;</span><br><span class="line">    <span class="type">char</span> buffer[<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入密码\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%7s&quot;</span>, password); </span><br><span class="line">        valid = <span class="built_in">strcmp</span>(password, <span class="string">&quot;1234567&quot;</span>);</span><br><span class="line">        <span class="built_in">strncpy</span>(buffer, password, <span class="built_in">sizeof</span>(buffer) - <span class="number">1</span>);</span><br><span class="line">        buffer[<span class="built_in">sizeof</span>(buffer) - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;登录失败\n&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;登录成功\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="作业10（24-12-3）"><a href="#作业10（24-12-3）" class="headerlink" title="作业10（24.12.3）"></a>作业10（24.12.3）</h1><h2 id="1、【程序文件名】zy10-1-cpp"><a href="#1、【程序文件名】zy10-1-cpp" class="headerlink" title="1、【程序文件名】zy10-1.cpp"></a>1、【程序文件名】zy10-1.cpp</h2><p>【题目描述】有n个整数，使前面各数顺序向后移m个位置，最后m个数变成最前面m个 数。如有n&#x3D;10个整数：      1   2   3   4   5   6   7   8   9   10  若m&#x3D;4，则后面4个数移到前面，如下：      7   8   9   10   1   2   3   4   5   6  试编写一函数void move(int a[],int n,int m)实现以上功能，在main函数中输入n个数和m 的值，调用move函数后，输出调整后的n个数，每个数间用一个空格隔开。例如：  输入：10  1 2 3 4 5 6 7 8 9 10  4  输出：7 8 9 10 1 2 3 4 5 6  </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="type">void</span> <span class="keyword">move</span>(<span class="type">int</span> a[], <span class="type">int</span> n, <span class="type">int</span> m) &#123;</span><br><span class="line">    m = m % n; </span><br><span class="line">    <span class="type">int</span> <span class="keyword">temp</span>[m]; </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">temp</span>[i] = a[n - m + i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= m; i<span class="comment">--) &#123;</span></span><br><span class="line">        a[i] = a[i - m];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        a[i] = <span class="keyword">temp</span>[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> main() &#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        scanf(&quot;%d&quot;, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;m);</span><br><span class="line">    <span class="keyword">move</span>(a, n, m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        printf(&quot;%d &quot;, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;\n&quot;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、程序文件名】zy10-2-cpp"><a href="#2、程序文件名】zy10-2-cpp" class="headerlink" title="2、程序文件名】zy10-2.cpp"></a>2、程序文件名】zy10-2.cpp</h2><p>【题目描述】试编写一个摆花函数void flower(char f[][N],int n)，函数的功能描述：同学们弄 来了不多于26种花，每种花有多盆。为使有限的鲜花摆放得更美观，同学们决定把花摆成 正方形图案，现在告诉你正方形的边长N（每盆花的直径为一个单位长，1&lt;&#x3D;N&lt;&#x3D;99，N为 奇数），请你编程输出花所排成正方形图案（用大写字母代表花）。我们把图案的中心称为第 1圈，中心向外依次是第2圈、第3圈……。中心是字母A，第2圈是字母B，第3圈是字母 C，……，第26圈是字母Z，第27圈又是字母A，第28圈又是字母B，……Z，A，B……。在 main函数中，输入n，调用flower函数后，输出图案，提醒：输出时每个字母前有一个空 格。  例如：  输入：15  则输出以下图案（输出时每个字母前留一个空格）：  H H H H H H H H H H H H H H H  H G G G G G G G G G G G G G H  H G F F F F F F F F F F F G H  H G F E E E E E E E E E F G H  H G F E D D D D D D D E F G H  H G F E D C C C C C D E F G H  H G F E D C B B B C D E F G H  H G F E D C B A B C D E F G H  H G F E D C B B B C D E F G H  H G F E D C C C C C D E F G H  H G F E D D D D D D D E F G H  H G F E E E E E E E E E F G H  H G F F F F F F F F F F F G H  H G G G G G G G G G G G G G H  H H H H H H H H H H H H H H H  </p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#define <span class="built_in">N</span> <span class="number">99</span> </span><br><span class="line">void flower(<span class="built_in">char</span> f[][<span class="built_in">N</span>], <span class="built_in">int</span> <span class="built_in">n</span>) &#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="built_in">mid</span> = <span class="built_in">n</span> / <span class="number">2</span>;  </span><br><span class="line">    for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">n</span>; i++) &#123;</span><br><span class="line">        for (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">n</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">int</span> layer = (i &lt; <span class="built_in">mid</span> ? <span class="built_in">mid</span> - i <span class="symbol">:</span> i - <span class="built_in">mid</span>) &gt; (j &lt; <span class="built_in">mid</span> ? <span class="built_in">mid</span> - j <span class="symbol">:</span> j - <span class="built_in">mid</span>) ?</span><br><span class="line">                        (i &lt; <span class="built_in">mid</span> ? <span class="built_in">mid</span> - i <span class="symbol">:</span> i - <span class="built_in">mid</span>) <span class="symbol">:</span> (j &lt; <span class="built_in">mid</span> ? <span class="built_in">mid</span> - j <span class="symbol">:</span> j - <span class="built_in">mid</span>);</span><br><span class="line">            <span class="built_in">char</span> ch = &#x27;A&#x27; + layer % <span class="number">26</span>; </span><br><span class="line">            f[i][j] = ch;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main() &#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="built_in">n</span>;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>, &amp;<span class="built_in">n</span>); </span><br><span class="line">    <span class="built_in">char</span> f[<span class="built_in">N</span>][<span class="built_in">N</span>];</span><br><span class="line">    flower(f, <span class="built_in">n</span>);</span><br><span class="line">    for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">n</span>; i++) &#123;</span><br><span class="line">        for (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">n</span>; j++) &#123;</span><br><span class="line">            printf(<span class="string">&quot; %c&quot;</span>, f[i][j]); </span><br><span class="line">        &#125;</span><br><span class="line">        printf(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、程序文件名】zy10-3-cpp"><a href="#3、程序文件名】zy10-3-cpp" class="headerlink" title="3、程序文件名】zy10-3.cpp"></a>3、程序文件名】zy10-3.cpp</h2><p> 【题目描述】输入以下代码，分析程序运行结果，应如何改进宏定义避免出现歧义。请完善 程序，输出没有歧义的数据。输出：S&#x3D;314.15900  注意：宏预处理只是简单的替换。  #include   #define M 2  #define N M+3  #define R M<em>N  #define PI 3.14159  #define S(r) PI</em>r*r  int main()  {  printf(“S&#x3D;%.5f\n”,S(R));  }</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N (M + 3)     </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> R (M * N)     </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PI 3.14159</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S(r) (PI * (r) * (r))  </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;S=%.5f\n&quot;</span>, <span class="built_in">S</span>(R)); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>宏的替换规则</strong>：宏在预处理阶段是直接文本替换，没有语法检查或解析。</p><p><strong>代码中的宏展开</strong>：</p><ul><li><p><code>M</code> 被替换为 <code>2</code>。</p></li><li><p><code>N</code> 被替换为 <code>M + 3</code>，即替换为 <code>2 + 3</code>。</p></li><li><p><code>R</code> 被替换为 <code>M * N</code>，展开为 <code>2 * 2 + 3</code>。</p></li><li><p>因为宏替换没有括号，<code>R</code> 变为 <code>2 * 2 + 3 = 4 + 3 = 7</code>，而不是期望的 <code>2 * (2 + 3) = 10</code>。</p></li><li><p>最终 <code>S(R)</code> 被替换为 <code>PI * R * R</code>，展开后是 <code>PI * 7 * 7</code>。</p></li><li><h4 id="结果："><a href="#结果：" class="headerlink" title="结果："></a>结果：</h4><p>当前程序运行结果是：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">makefile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">复制代码</span><br><span class="line"><span class="attribute">S</span><span class="operator">=</span><span class="number">153.93791</span></span><br></pre></td></tr></table></figure><p>显然这并非期望值。</p><hr><h3 id="如何避免歧义"><a href="#如何避免歧义" class="headerlink" title="如何避免歧义"></a>如何避免歧义</h3><ol><li><p><strong>为宏参数加括号</strong>：确保替换时不改变原始表达式的优先级。</p></li><li><p><strong>为宏定义加括号</strong>：避免操作符优先级的混淆。</p></li><li><h3 id="改进后的代码"><a href="#改进后的代码" class="headerlink" title="改进后的代码"></a>改进后的代码</h3><p>以下是改进后的代码，确保宏定义没有歧义：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">c复制代码<span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N (M + 3)      <span class="comment">// 用括号包裹，防止优先级混淆</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> R (M * N)      <span class="comment">// 同样用括号，确保优先级正确</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PI 3.14159</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S(r) (PI * (r) * (r))  <span class="comment">// 为参数和整体表达式加括号</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;S=%.5f\n&quot;</span>, <span class="built_in">S</span>(R)); <span class="comment">// S = PI * R * R</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="修改后的宏展开过程"><a href="#修改后的宏展开过程" class="headerlink" title="修改后的宏展开过程"></a>修改后的宏展开过程</h3><ol><li><code>M = 2</code>。</li><li><code>N = (M + 3)</code>，展开为 <code>(2 + 3)</code>。</li><li><code>R = (M * N)</code>，展开为 <code>(2 * (2 + 3)) = 10</code>。</li><li><code>S(r) = (PI * (r) * (r))</code>，替换 <code>R</code> 后展开为 <code>(PI * 10 * 10)</code>。</li><li>最终计算结果： S&#x3D;π⋅10⋅10&#x3D;314.15900S &#x3D; \pi \cdot 10 \cdot 10 &#x3D; 314.15900S&#x3D;π⋅10⋅10&#x3D;314.15900</li></ol><hr><h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">makefile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">复制代码</span><br><span class="line"><span class="attribute">S</span><span class="operator">=</span><span class="number">314.15900</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>宏替换容易因为缺少括号引发歧义。<strong>最佳实践</strong>是：</p><ol><li><strong>为宏定义中的每个表达式添加括号</strong>。</li><li><strong>为宏函数的参数加括号</strong>，以防止优先级问题。</li></ol><h1 id="实验六（24-12-6）"><a href="#实验六（24-12-6）" class="headerlink" title="实验六（24.12.6）"></a>实验六（24.12.6）</h1><h2 id="sy6-1"><a href="#sy6-1" class="headerlink" title="sy6-1"></a>sy6-1</h2><p>打开C集成开发环境，建立一个sy6-1.cpp文件，编写一函数int swap(int x,int y)，功能是交换两个数并返回两数之和。在main函数中输入两个数x和y，调用swap函数后，输出交换后的两个数x、y以及两数之和（每个数后留一个空格）。例如：</p><p>输入：3 5</p><p>输出：5 3 8</p><p>输入：8 3</p><p>输出：3 8 11</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> *x, <span class="type">int</span> *y)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> temp = *x;</span><br><span class="line">    *x = *y;</span><br><span class="line">    *y = temp;</span><br><span class="line">    <span class="keyword">return</span> *x + *y; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> x, y, sum;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">    sum = <span class="built_in">swap</span>(&amp;x, &amp;y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, x, y, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="sy6-2"><a href="#sy6-2" class="headerlink" title="sy6-2"></a>sy6-2</h2><p>打开C集成开发环境，建立一个sy6-2.cpp文件，编写一函数void radix(int x，int d)，功能是使用递归调用方法将十进制数x转化为d（如2、8）进制并输出。在main函数中输入正整数x和d（2或8）后调用radix函数。</p><p>输入：23 2</p><p>输出：10111</p><p>输入：31 8</p><p>输出：37</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">radix</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> d)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">radix</span>(x / d, d); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, x % d);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> x, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;d);</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);  </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">radix</span>(x, d);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="sy6-3"><a href="#sy6-3" class="headerlink" title="sy6-3"></a>sy6-3</h2><p>打开C集成开发环境，建立一个sy6-3.cpp文件，编写两个函数void sort(int a[],int n)和int search(int a[],int n,int x)，其中sort功能是对传入的n个数进行升序排序；search功能是使用折半查找法（即二分法）在一组有序（升序）的n个数中查找指定数x，若找到，返回x在该组数中的位置（下标+1），若没找到，则返回-1。在main函数中输入n及n个数，调用sort函数后输出；再输入一个数x，调用search函数后，输出查找结果，若找到输出位置（如：Position:3），若没有找到，则输出：No find。注意：输出时英文大小写，以及Position后的冒号为英文格式。例如：</p><p>输入：10</p><p>21 34 5 22 43 65 78 31 65 9</p><p>输出：5 9 21 22 31 34 43 65 65 78</p><p>输入：34</p><p>输出：Position:6</p><p>再如：</p><p>输入：8</p><p>23 45 21 54 78 54 31 17</p><p>输出：17 21 23 31 45 54 54 78</p><p>输入：19</p><p>输出：No find</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">void sort(<span class="built_in">int</span> a[], <span class="built_in">int</span> <span class="built_in">n</span>) &#123;</span><br><span class="line">    for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">n</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        for (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">n</span> - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">            <span class="built_in">if</span> (a[j] &gt; a[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="built_in">int</span> temp = a[j];</span><br><span class="line">                a[j] = a[j + <span class="number">1</span>];</span><br><span class="line">                a[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> <span class="built_in">search</span>(<span class="built_in">int</span> a[], <span class="built_in">int</span> <span class="built_in">n</span>, <span class="built_in">int</span> x) &#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="built_in">left</span> = <span class="number">0</span>, <span class="built_in">right</span> = <span class="built_in">n</span> - <span class="number">1</span>;</span><br><span class="line">    while (<span class="built_in">left</span> &lt;= <span class="built_in">right</span>) &#123;</span><br><span class="line">        <span class="built_in">int</span> <span class="built_in">mid</span> = (<span class="built_in">left</span> + <span class="built_in">right</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">if</span> (a[<span class="built_in">mid</span>] == x) return <span class="built_in">mid</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">if</span> (a[<span class="built_in">mid</span>] &lt; x) <span class="built_in">left</span> = <span class="built_in">mid</span> + <span class="number">1</span>;</span><br><span class="line">        else <span class="built_in">right</span> = <span class="built_in">mid</span> - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    return -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> main() &#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="built_in">n</span>, x;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>, &amp;<span class="built_in">n</span>);</span><br><span class="line">    <span class="built_in">int</span> a[<span class="built_in">n</span>];</span><br><span class="line">    for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">n</span>; i++) scanf(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    sort(a, <span class="built_in">n</span>); </span><br><span class="line">    for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">n</span>; i++) printf(<span class="string">&quot;%d &quot;</span>, a[i]); </span><br><span class="line">    printf(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    <span class="built_in">int</span> pos = <span class="built_in">search</span>(a, <span class="built_in">n</span>, x); </span><br><span class="line">    <span class="built_in">if</span> (pos != -<span class="number">1</span>) printf(<span class="string">&quot;Position:%d\n&quot;</span>, pos);</span><br><span class="line">    else printf(<span class="string">&quot;No find\n&quot;</span>);</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="sy6-4"><a href="#sy6-4" class="headerlink" title="sy6-4"></a>sy6-4</h2><p>打开C集成开发环境，建立一个sy6-4.cpp文件，编写一函数void encrypt(char s[],int d)，功能是将字符串中的每个字母用其之后（或之前）的第d个字母替换，如：d&#x3D;4，则：AàE，BàF，…，WàA，XàB，aàe，bàf，…，wàa，xàb；如：d&#x3D;-4，则：AàW，BàX，…，aàw，bàx，…，其他字符不变。在main函数中输入一个字符串s和d，调用encrypt(s,d)后，输出s，执行d&#x3D;-d后再次调用encrypt(s,d)后，输出s。例如：</p><p>输入：Windows</p><p>4</p><p>输出：Amrhsaw</p><p>Windows</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">encrypt</span><span class="params">(<span class="type">char</span> s[], <span class="type">int</span> d)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;Z&#x27;</span>) &#123; </span><br><span class="line">            s[i] = (s[i] - <span class="string">&#x27;A&#x27;</span> + d + <span class="number">26</span>) % <span class="number">26</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">            s[i] = (s[i] - <span class="string">&#x27;a&#x27;</span> + d + <span class="number">26</span>) % <span class="number">26</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">100</span>];</span><br><span class="line">    <span class="type">int</span> d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;d);</span><br><span class="line">    <span class="built_in">encrypt</span>(s, d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s);</span><br><span class="line">    d = -d;</span><br><span class="line">    <span class="built_in">encrypt</span>(s, d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="sy6-5"><a href="#sy6-5" class="headerlink" title="sy6-5"></a>sy6-5</h2><p>打开C集成开发环境，建立一个sy6-5.cpp文件，输入以下代码，编译运行，并分析运行结果。理解局部变量和全局变量、动态变量与静态变量的区别。</p><p>#include &lt;stdio.h&gt;</p><p>int x;</p><p>void fun()</p><p>{</p><p>​    int x;</p><p>​    static int y;</p><p>​    x&#x3D;x+1;</p><p>​    y&#x3D;y+2;</p><p>​    printf(“fun:x&#x3D;%d,y&#x3D;%d\n”,x,y);</p><p>}</p><p>int main()</p><p>{</p><p>​    int y&#x3D;0;</p><p>​    x&#x3D;x+3;</p><p>​    y&#x3D;y+4;</p><p>​    printf(“main1:x&#x3D;%d,y&#x3D;%d\n”,x,y);</p><p>​    fun();</p><p>​    printf(“main2:x&#x3D;%d,y&#x3D;%d\n”,x,y);</p><p>​    {</p><p>​         int x;</p><p>​         x++;y++;</p><p>​         printf(“main3:x&#x3D;%d,y&#x3D;%d\n”,x,y);</p><p>​    }</p><p>​    printf(“main4:x&#x3D;%d,y&#x3D;%d\n”,x,y);</p><p>​    fun();</p><p>​    x++;y++;</p><p>​    printf(“main5:x&#x3D;%d,y&#x3D;%d\n”,x,y);</p><p>​    return 0;</p><p>}</p><ol><li><strong>全局变量</strong> (<code>int x</code>):<ul><li>在整个程序中都可以访问。全局变量 <code>x</code> 在 <code>main</code> 函数和 <code>fun</code> 函数中都会被使用。默认初始化为0，<code>main</code> 中对 <code>x</code> 进行了加法操作，修改其值。</li><li>全局变量 <code>x</code> 的变化：<ul><li><code>main1</code> 中：<code>x = 0 + 3 = 3</code></li><li><code>fun</code> 函数中，<code>x</code> 并没有在 <code>fun</code> 中被修改（<code>fun</code> 中有局部变量 <code>x</code>），所以它的值仍然是 3。</li><li><code>main5</code> 中，<code>x</code> 被加 1，最终值为 4。</li></ul></li></ul></li><li><strong>局部变量</strong> (<code>int y</code>):<ul><li>每个局部变量只在其定义的函数或代码块内有效。<code>main</code> 中的 <code>y</code> 被赋值 0，并修改为 4，然后传递给 <code>fun</code> 函数。<code>fun</code> 函数中的 <code>y</code> 只在 <code>fun</code> 中有效。<code>main</code> 中的 <code>y</code> 在 <code>main</code> 的作用域内修改。</li><li>局部变量 <code>y</code> 的变化：<ul><li><code>main1</code> 中：局部变量 <code>y</code> 从 0 加 4 变为 4。</li><li><code>main2</code> 中：<code>main</code> 中的 <code>y</code> 值未改变，所以输出 4。</li><li><code>main3</code> 中：局部变量 <code>x</code> 被定义，但与 <code>main</code> 和 <code>fun</code> 中的 <code>x</code> 无关。此时，局部 <code>y</code> 被加 1，结果是 5。</li><li><code>main4</code> 中：输出 <code>y</code> 为 4，因为 <code>main</code> 中的 <code>y</code> 在 <code>main3</code> 之后并未发生变化。</li><li><code>main5</code> 中：局部变量 <code>y</code> 仍然是 4，输出 5，因为它被加 1。</li></ul></li></ul></li><li><strong>静态变量</strong> (<code>static int y</code> in <code>fun()</code>):<ul><li>静态变量在函数调用之间保持其值，而不是每次调用时重新初始化。静态变量 <code>y</code> 的初值为 0。每次调用 <code>fun</code> 时，它的值会增加 2。</li><li>静态变量 <code>y</code> 的变化：<ul><li>第一次调用 <code>fun</code> 时，<code>y</code> 增加 2，输出为 2。</li><li>第二次调用 <code>fun</code> 时，<code>y</code> 增加 2，输出为 4。</li></ul></li></ul></li><li><strong>局部变量 <code>x</code> in <code>fun()</code></strong>:<ul><li>在 <code>fun</code> 函数中，局部变量 <code>x</code> 被初始化为默认值（0），并在每次调用时增加 1，但这不会影响全局变量 <code>x</code>。因此，<code>x = x + 1</code> 会输出局部变量 <code>x</code> 的值为 1，但每次都从 0 开始。</li></ul></li></ol><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ul><li><strong>全局变量</strong>：在整个程序中有效，值保持不变，除非显示修改。</li><li><strong>局部变量</strong>：仅在定义它的函数或代码块内有效，每次调用时会重新初始化。</li><li><strong>静态变量</strong>：在函数调用之间保持其值，初始值为 0，只会在第一次调用时初始化，之后每次调用都会累加。</li></ul><h2 id="sy6-6"><a href="#sy6-6" class="headerlink" title="sy6-6"></a>sy6-6</h2><p>打开C集成开发环境，建立一个sy6-6.cpp文件，输入以下代码，编译运行，并分析运行结果。理解缓冲区溢出漏洞利用原理。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printtest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="built_in">printf</span>(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">gettest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="type">char</span> str[<span class="number">8</span>]=&#123;<span class="string">&#x27;0&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line">​    <span class="type">int</span> p=(<span class="type">int</span>)&amp;printtest;</span><br><span class="line"></span><br><span class="line">​    <span class="type">char</span> ap[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">​    ap[<span class="number">0</span>]=p&gt;&gt;<span class="number">24</span> &amp; <span class="number">0x000000FF</span>; <span class="comment">//取地址的高字节</span></span><br><span class="line"></span><br><span class="line">​    ap[<span class="number">1</span>]=p&lt;&lt;<span class="number">8</span>&gt;&gt;<span class="number">24</span> &amp; <span class="number">0x000000FF</span>;<span class="comment">//取地址的第二字节</span></span><br><span class="line"></span><br><span class="line">​    ap[<span class="number">2</span>]=p&lt;&lt;<span class="number">16</span>&gt;&gt;<span class="number">24</span> &amp; <span class="number">0x000000FF</span>; <span class="comment">//取地址的第三字节</span></span><br><span class="line"></span><br><span class="line">​    ap[<span class="number">3</span>]=p&lt;&lt;<span class="number">24</span>&gt;&gt;<span class="number">24</span> &amp; <span class="number">0x000000FF</span>; <span class="comment">//取地址的末字节</span></span><br><span class="line"></span><br><span class="line">​    str[<span class="number">12</span>]=ap[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">​    str[<span class="number">13</span>]=ap[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">​    str[<span class="number">14</span>]=ap[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">​    str[<span class="number">15</span>]=ap[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">​    <span class="built_in">gettest</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h3 id="关键部分的解释："><a href="#关键部分的解释：" class="headerlink" title="关键部分的解释："></a>关键部分的解释：</h3><ol><li><strong>函数地址存储</strong>：<ul><li><code>int p = (int)&amp;printtest;</code> 通过 <code>&amp;printtest</code> 获取 <code>printtest</code> 函数的内存地址，并将其强制转换为 <code>int</code> 类型。这将获取函数的地址（假设函数地址适配 <code>int</code> 类型，即 32 位系统）。</li></ul></li><li><strong>地址的字节拆分</strong>：<ul><li>使用位运算，将 <code>p</code> 地址分成 4 个字节，并存储到 <code>ap</code> 数组中。这样就能得到 <code>printtest</code> 函数的地址的每个字节。</li></ul></li><li><strong>缓冲区溢出</strong>：<ul><li><code>str[8]</code> 是一个大小为 8 的字符数组，但是接下来将 <code>ap[0]</code> 到 <code>ap[3]</code> 存储到 <code>str[12]</code> 到 <code>str[15]</code>。这是典型的缓冲区溢出，因为 <code>str</code> 数组只有 8 个元素，而你尝试访问和修改第 12、13、14 和 15 个元素，这会导致溢出，并修改内存中其他地方的数据。</li></ul></li><li><strong>程序的潜在影响</strong>：<ul><li>由于溢出的操作覆盖了内存中的其他部分，它可能会影响程序的控制流或数据。</li><li>此程序没有明确调用 <code>printtest</code> 函数，但因为溢出操作改变了栈上的数据，程序实际上可能会通过修改返回地址等方式，使得执行控制流跳转到 <code>printtest</code>，并且执行 <code>printf(&quot;test&quot;)</code>。这就是所谓的缓冲区溢出漏洞，攻击者可以利用这个漏洞控制程序的执行。</li></ul></li></ol><h3 id="编译和运行结果："><a href="#编译和运行结果：" class="headerlink" title="编译和运行结果："></a>编译和运行结果：</h3><ul><li><strong>执行时</strong>：程序会运行 <code>gettest()</code> 函数，并试图访问 <code>str[12]</code> 到 <code>str[15]</code>，这是超出 <code>str</code> 数组的有效范围的，这会导致未定义行为，可能会修改栈上的其他数据。</li><li><strong>潜在输出</strong>：在某些情况下，这种溢出操作会修改栈上的返回地址或其他控制数据，从而导致程序跳转到 <code>printtest</code> 函数并输出 <code>test</code>。</li></ul><h3 id="理解缓冲区溢出漏洞利用原理："><a href="#理解缓冲区溢出漏洞利用原理：" class="headerlink" title="理解缓冲区溢出漏洞利用原理："></a>理解缓冲区溢出漏洞利用原理：</h3><p>缓冲区溢出漏洞是通过向一个缓冲区（如数组）写入超过其容量的数据，进而覆盖相邻内存区域的内容。当溢出覆盖了栈上的控制信息（如返回地址、函数参数等）时，攻击者可以控制程序的执行流，使其跳转到任意地址（比如恶意代码或某个已知函数地址），从而执行攻击者指定的操作。</p><p>在这个程序中，<code>str</code> 数组的溢出会修改栈上的其他数据（例如返回地址），从而可能让程序跳转到 <code>printtest</code> 函数，输出 <code>test</code>。</p><h3 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h3><ul><li><strong>缓冲区溢出</strong>：通过向数组中写入超过其容量的数据，修改程序控制流或破坏内存内容。</li><li><strong>漏洞利用</strong>：攻击者可以利用这个漏洞控制程序的执行流，执行任意代码。</li><li><strong>改进</strong>：应避免直接操作数组下标，确保访问数组时不超出其边界，防止缓冲区溢出问题。</li></ul><h1 id="实验七（24-12-12）"><a href="#实验七（24-12-12）" class="headerlink" title="实验七（24.12.12）"></a>实验七（24.12.12）</h1><h2 id="7-1"><a href="#7-1" class="headerlink" title="7-1"></a>7-1</h2><p>打开C集成开发环境，建立一个sy7-1.cpp文件，编写一程序求两个复数之和。要求：首先定义一个表示复数的结构体struct complex，包含两个成员：实部x（int型）和虚部y（int 型）；然后写一个函数struct complex add(struct complex a, struct complex b)求两个复数之和；最后在main函数中输入两个复数的实部和虚部，调用add函数后，输出两复数之和。例如：</p><p>输入：3 5 4 -7</p><p>输出：7-2i</p><p>输入：20 30 -30 -20</p><p>输出：-10+10i</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">complex</span> &#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">complex</span> <span class="built_in">add</span>(<span class="keyword">struct</span> complex a, <span class="keyword">struct</span> complex b) &#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">complex</span> result;</span><br><span class="line">    result.x = a.x + b.x;</span><br><span class="line">    result.y = a.y + b.y; </span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">complex</span> num1, num2, result;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;num<span class="number">1.</span>x, &amp;num<span class="number">1.</span>y, &amp;num<span class="number">2.</span>x, &amp;num<span class="number">2.</span>y);</span><br><span class="line">    result = <span class="built_in">add</span>(num1, num2);</span><br><span class="line">    <span class="keyword">if</span> (result.y &gt;= <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d+%di\n&quot;</span>, result.x, result.y);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d%di\n&quot;</span>, result.x, result.y); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-2"><a href="#7-2" class="headerlink" title="7-2"></a>7-2</h2><p>打开C集成开发环境，建立一个sy7-2.cpp文件，编写一程序对学生成绩进行处理，学生的信息包括学号（字符不超过10个）、姓名（字符不超过10个，不含空格）、3门课程的成绩（float型）以及平均分（float型）。要求：先定义一个表示学生信息的结构体struct student；然后定义3个函数，分别用于输入数据（含计算平均分）void input_data(struct student stu[ ],int n)、按平均分升序排序void sort(struct student stu[ ],int n)和输出数据void print_data(struct student stu[ ],int n)；最后在main函数中输入学生人数n，依次调用input_data(stu,n)、sort(stu,n)和print_data(stu,n)函数。输入输出时每个数据间用一个空格隔开，成绩及平均分的小数保留1位。例如：</p><p>输入：3</p><p>00001 zhangsan 89 78 67</p><p>00002 lisi 70 66 72</p><p>00003 wangwu 78 77 70</p><p>输出：00002 lisi 70.0 66.0 72.0 69.3</p><p>00003 wangwu 78.0 77.0 70.0 75.0</p><p>00001 zhangsan 89.0 78.0 67.0 78.0</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义学生信息结构体</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> &#123;</span><br><span class="line">    <span class="type">char</span> id[<span class="number">11</span>];          <span class="comment">// 学号</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">11</span>];        <span class="comment">// 姓名</span></span><br><span class="line">    <span class="type">float</span> scores[<span class="number">3</span>];      <span class="comment">// 3门课程成绩</span></span><br><span class="line">    <span class="type">float</span> average;        <span class="comment">// 平均分</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入数据函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">input_data</span><span class="params">(<span class="keyword">struct</span> student stu[], <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %s %f %f %f&quot;</span>, stu[i].id, stu[i].name, </span><br><span class="line">              &amp;stu[i].scores[<span class="number">0</span>], &amp;stu[i].scores[<span class="number">1</span>], &amp;stu[i].scores[<span class="number">2</span>]);</span><br><span class="line">        <span class="comment">// 计算平均分</span></span><br><span class="line">        stu[i].average = (stu[i].scores[<span class="number">0</span>] + stu[i].scores[<span class="number">1</span>] + stu[i].scores[<span class="number">2</span>]) / <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按平均分升序排序函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">struct</span> student stu[], <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stu[j].average &gt; stu[j + <span class="number">1</span>].average) &#123;</span><br><span class="line">                <span class="keyword">struct</span> <span class="title class_">student</span> temp = stu[j];</span><br><span class="line">                stu[j] = stu[j + <span class="number">1</span>];</span><br><span class="line">                stu[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出数据函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print_data</span><span class="params">(<span class="keyword">struct</span> student stu[], <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s %s %.1f %.1f %.1f %.1f\n&quot;</span>, </span><br><span class="line">               stu[i].id, stu[i].name, </span><br><span class="line">               stu[i].scores[<span class="number">0</span>], stu[i].scores[<span class="number">1</span>], stu[i].scores[<span class="number">2</span>], </span><br><span class="line">               stu[i].average);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n); <span class="comment">// 输入学生人数</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">student</span> stu[n];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">input_data</span>(stu, n);  <span class="comment">// 输入学生数据</span></span><br><span class="line">    <span class="built_in">sort</span>(stu, n);        <span class="comment">// 按平均分排序</span></span><br><span class="line">    <span class="built_in">print_data</span>(stu, n);  <span class="comment">// 输出学生数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-3"><a href="#7-3" class="headerlink" title="7-3"></a>7-3</h2><p>打开C集成开发环境，建立一个sy7-3.cpp文件，编写一个程序使用链表操作学生信息，学生的信息包括学号（字符不超过10个）、姓名（字符不超过10个，不含空格）和年龄（int型）。要求：先定义一个表示学生信息的结点struct student；然后定义5个函数，分别用于：创建一个带有头结点的链表（头插法，按学号降序输入数据，学生个数为n，本函数中输入）函数struct student *create()、插入数据（任意位置插入，保持学号有序，新生信息结点由main传递过来）函数void insert(struct student *h, struct student *x)、删除数据（删除指定学号的学生数据，学号由main传递过来）函数void dele (struct student *h,char num[])、输出数据函数void print(struct student *h)和菜单（用于显示1. create、2. insert、3. delete、4. print和0. exit）函数void menu()；最后在main函数中用一个死循环实现可重复显示菜单及通过输入整数（0~4）选择调用相应功能函数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义学生信息结点</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> &#123;</span><br><span class="line">    <span class="type">char</span> id[<span class="number">11</span>];        <span class="comment">// 学号</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">11</span>];      <span class="comment">// 姓名</span></span><br><span class="line">    <span class="type">int</span> age;            <span class="comment">// 年龄</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">student</span> *next; <span class="comment">// 指向下一个结点</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建链表（头插法，按学号降序输入数据）</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> *<span class="built_in">create</span>() &#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">student</span> *head = (<span class="keyword">struct</span> student *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> student));</span><br><span class="line">    head-&gt;next = <span class="literal">NULL</span>; <span class="comment">// 初始化头结点</span></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter the number of students: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">struct</span> <span class="title class_">student</span> *new_node = (<span class="keyword">struct</span> student *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> student));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter student ID, name, and age: &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %s %d&quot;</span>, new_node-&gt;id, new_node-&gt;name, &amp;new_node-&gt;age);</span><br><span class="line">        <span class="comment">// 插入到链表的头部</span></span><br><span class="line">        new_node-&gt;next = head-&gt;next;</span><br><span class="line">        head-&gt;next = new_node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入数据（保持学号有序）</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">struct</span> student *h, <span class="keyword">struct</span> student *x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">student</span> *prev = h, *curr = h-&gt;next;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (curr &amp;&amp; <span class="built_in">strcmp</span>(curr-&gt;id, x-&gt;id) &gt; <span class="number">0</span>) &#123; <span class="comment">// 查找插入位置</span></span><br><span class="line">        prev = curr;</span><br><span class="line">        curr = curr-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    x-&gt;next = curr;  <span class="comment">// 插入到链表中</span></span><br><span class="line">    prev-&gt;next = x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除指定学号的学生数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dele</span><span class="params">(<span class="keyword">struct</span> student *h, <span class="type">char</span> num[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">student</span> *prev = h, *curr = h-&gt;next;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (curr &amp;&amp; <span class="built_in">strcmp</span>(curr-&gt;id, num) != <span class="number">0</span>) &#123; <span class="comment">// 查找要删除的结点</span></span><br><span class="line">        prev = curr;</span><br><span class="line">        curr = curr-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (curr) &#123; <span class="comment">// 找到并删除</span></span><br><span class="line">        prev-&gt;next = curr-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(curr);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Deleted student with ID: %s\n&quot;</span>, num);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Student with ID %s not found.\n&quot;</span>, num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="keyword">struct</span> student *h)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">student</span> *curr = h-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (curr) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ID: %s, Name: %s, Age: %d\n&quot;</span>, curr-&gt;id, curr-&gt;name, curr-&gt;age);</span><br><span class="line">        curr = curr-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 菜单函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nMenu:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. Create\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2. Insert\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3. Delete\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;4. Print\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;0. Exit\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">student</span> *head = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">menu</span>(); <span class="comment">// 显示菜单</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter your choice: &quot;</span>);</span><br><span class="line">        <span class="type">int</span> choice;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>; <span class="comment">// 退出程序</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (choice) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>: <span class="comment">// 创建链表</span></span><br><span class="line">                head = <span class="built_in">create</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: &#123; <span class="comment">// 插入数据</span></span><br><span class="line">                <span class="keyword">if</span> (!head) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Create the list first.\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">struct</span> <span class="title class_">student</span> *new_node = (<span class="keyword">struct</span> student *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="keyword">struct</span> student));</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Enter student ID, name, and age: &quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%s %s %d&quot;</span>, new_node-&gt;id, new_node-&gt;name, &amp;new_node-&gt;age);</span><br><span class="line">                <span class="built_in">insert</span>(head, new_node);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>: &#123; <span class="comment">// 删除数据</span></span><br><span class="line">                <span class="keyword">if</span> (!head) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Create the list first.\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">char</span> id[<span class="number">11</span>];</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Enter the student ID to delete: &quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, id);</span><br><span class="line">                <span class="built_in">dele</span>(head, id);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>: <span class="comment">// 输出数据</span></span><br><span class="line">                <span class="keyword">if</span> (!head) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Create the list first.\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">print</span>(head);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Invalid choice. Try again.\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-4"><a href="#7-4" class="headerlink" title="7-4"></a>7-4</h2><p>打开C集成开发环境，建立一个sy7-4.cpp文件，输入以下代码，编译运行，并分析运行结果。理解结构体和联合体（共用体）的区别，理解枚举类型数据的定义和使用。</p><p>#include &lt;stdio.h&gt;</p><p>struct str_node</p><p>{</p><p>​    char ch[2];</p><p>​    short int k;</p><p>};</p><p>union uni_node</p><p>{</p><p>​    char ch[2];</p><p>​    short int k;</p><p>}b;</p><p>enum weekday{sun&#x3D;7, mon&#x3D;1, tue, wed, thr, fri, sat};</p><p>int main()</p><p>{</p><p>​    struct str_node a;</p><p>​    union uni_node b;</p><p>​    enum weekday c,d;</p><p>​    a.ch[0]&#x3D;’a’;</p><p>​    a.ch[1]&#x3D;’b’;</p><p>​    a.k&#x3D;0x4241;</p><p>​    b.ch[0]&#x3D;’a’;</p><p>​    b.ch[1]&#x3D;’b’;</p><p>​    b.k&#x3D;0x4241;</p><p>​    c&#x3D;fri;</p><p>​    d&#x3D;(enum weekday)6;  &#x2F;&#x2F;若删去(enum weekday)将会发生什么呢？</p><p>​    printf(“%c,%c\n”,a.ch[0],a.ch[1]);</p><p>​    printf(“%c,%c\n”,b.ch[0],b.ch[1]);</p><p>​    printf(“%d,%d\n”,c,d);</p><p>​    return 0;</p><p>}</p><p><strong>结构体 <code>str_node</code> 和联合体 <code>uni_node</code> 的定义</strong>：</p><ul><li><pre><code>struct str_node<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   是一个结构体，包含两个成员：</span><br><span class="line"></span><br><span class="line">  - `char ch[<span class="number">2</span>]`：字符数组，存储两个字符。</span><br><span class="line">  - `short int k`：一个短整型变量。</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  union uni_node</span><br></pre></td></tr></table></figure> 是一个联合体，包含两个成员：- `char ch[2]`：字符数组。- `short int k`。</code></pre></li><li><p>区别</p><p>：</p><ul><li>结构体的所有成员占用独立的存储空间，<strong>总大小是所有成员大小之和</strong>。</li><li>联合体的所有成员共享同一块内存空间，<strong>总大小是最大成员的大小</strong>。</li></ul></li></ul><p><strong>枚举类型 <code>weekday</code> 的定义</strong>：</p><ul><li><pre><code>enum weekday<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   定义了星期几的枚举类型：</span><br><span class="line"></span><br><span class="line"><span class="bullet">  -</span> <span class="code">`sun=7`</span> 明确指定值为7。</span><br><span class="line"><span class="bullet">  -</span> <span class="code">`mon`</span> 开始值为1，之后逐个递增：<span class="code">`tue=2, wed=3`</span>，依此类推。</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 用法</span><br><span class="line"></span><br><span class="line">  ：</span><br><span class="line"></span><br><span class="line"><span class="bullet">  -</span> <span class="code">`c = fri;`</span> 将 <span class="code">`c`</span> 赋值为枚举值 <span class="code">`fri`</span>，即 <span class="code">`fri=5`</span>。</span><br><span class="line"><span class="bullet">  -</span> <span class="code">`d = (enum weekday)6;`</span> 强制将整数 <span class="code">`6`</span> 转换为 <span class="code">`weekday`</span> 类型。</span><br><span class="line"></span><br><span class="line"><span class="strong">**代码逻辑解释**</span>：</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="code">```</span></span><br><span class="line"><span class="code">  a.ch[0]=&#x27;a&#x27;; a.ch[1]=&#x27;b&#x27;; a.k=0x4241;</span></span><br></pre></td></tr></table></figure>- `a.ch[0]` 和 `a.ch[1]` 分别存储字符 `&#39;a&#39;` 和 `&#39;b&#39;`。- `a.k` 存储的是 `0x4241`，即 `&#39;B&#39;` 和 `&#39;A&#39;` 的 ASCII 码值（小端存储顺序）。</code></pre></li><li><pre><code>b.ch[0]=&#39;a&#39;; b.ch[1]=&#39;b&#39;; b.k=0x4241;<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  - 因为联合体 `b` 的所有成员共享存储空间，最后的赋值 `b.k=<span class="number">0</span>x4241` 会覆盖先前存储的字符 `&#x27;a&#x27;` 和 `&#x27;b&#x27;`。</span><br><span class="line"></span><br><span class="line">- 输出的值</span><br><span class="line"></span><br><span class="line">  ：</span><br><span class="line"></span><br><span class="line">  - `a.ch[<span class="number">0</span>]` 和 `a.ch[<span class="number">1</span>]` 输出为 `&#x27;a&#x27;` 和 `&#x27;b&#x27;`，因为结构体的成员独立存储。</span><br><span class="line">  - `b.ch[<span class="number">0</span>]` 和 `b.ch[<span class="number">1</span>]` 输出为 `&#x27;A&#x27;` 和 `&#x27;B&#x27;`，因为 `b.k=<span class="number">0</span>x4241` 覆盖了字符数组。</span><br><span class="line"></span><br><span class="line">- 枚举类型：</span><br><span class="line"></span><br><span class="line">  - `c = fri` 输出 `5`。</span><br><span class="line">  - `d = (enum weekday)<span class="number">6</span>` 强制转换，输出 `6`。</span><br><span class="line"></span><br><span class="line">**问题分析：若删除 `(enum weekday)` 会怎样？**</span><br><span class="line"></span><br><span class="line">- **问题**：`d = <span class="number">6</span><span class="comment">;` 会导致类型不匹配的编译错误。</span></span><br><span class="line">- 原因是 `d` 的类型是 `enum weekday`，只能赋值为 `weekday` 类型的值或强制类型转换后的值。</span><br><span class="line"></span><br><span class="line">## <span class="number">7</span>-<span class="number">5</span></span><br><span class="line"></span><br><span class="line">打开C集成开发环境，建立一个sy7-<span class="number">5</span>.cpp文件，输入以下代码，编译运行，试输入正常电话号码和非正常号码（如<span class="number">15</span>个<span class="number">1</span>）分析运行结果。程序存在什么安全隐患，为什么？应如何避免。</span><br><span class="line"></span><br><span class="line">\#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">struct bank</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">​    char ID[<span class="number">10</span>]<span class="comment">;    //账号</span></span><br><span class="line"></span><br><span class="line">​    char name[<span class="number">20</span>]<span class="comment">;   //姓名  </span></span><br><span class="line"></span><br><span class="line">​    char mobile[<span class="number">12</span>]<span class="comment">;  //电话</span></span><br><span class="line"></span><br><span class="line">​    int balance<span class="comment">;    //币值</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">​    struct bank x=&#123;<span class="string">&quot;123456789&quot;</span>,<span class="string">&quot;Bob&quot;</span>,<span class="string">&quot;13412345678&quot;</span>,<span class="number">1000</span>&#125;<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">​    printf(<span class="string">&quot;%s,%s,%d,%s\n&quot;</span>,x.ID,x.name,x.balance,x.mobile )<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">​    gets(x.mobile)<span class="comment">;  //重新输入电话号码</span></span><br><span class="line"></span><br><span class="line">​    printf(<span class="string">&quot;%s,%s,%d,%s\n&quot;</span>,x.ID,x.name,x.balance,x.mobile )<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">​    <span class="keyword">return</span> <span class="number">0</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#### **运行结果**</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>. **正常输入电话号码**：</span><br><span class="line"></span><br><span class="line">   - 如果输入合法的<span class="number">11</span>位电话号码（如 `12345678901`），程序可以正常运行并输出修改后的电话号码。</span><br><span class="line"></span><br><span class="line">   - 输出示例：</span><br><span class="line"></span><br></pre></td></tr></table></figure>   复制代码123456789,Bob,1000,13412345678   123456789,Bob,1000,12345678901   <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**异常输入（例如输入15个字符或更多）**</span>：</span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span> 如果输入超出 <span class="code">`x.mobile`</span> 的长度限制（<span class="code">`12`</span> 字节，包括终止符），会导致内存溢出，可能破坏后续内存布局，甚至修改其他变量或引发程序崩溃。</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line"><span class="section">#### <span class="strong">**存在的安全隐患**</span></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> <span class="strong">**`gets` 函数的不安全性**</span>：</span><br><span class="line"><span class="bullet">   -</span> <span class="strong">**`gets` 不限制输入长度**</span>，用户可以输入任意多的字符，超过 <span class="code">`x.mobile`</span> 的大小时会导致<span class="strong">**缓冲区溢出**</span>。</span><br><span class="line"><span class="bullet">   -</span> 缓冲区溢出可能破坏其他内存区域，例如覆盖 <span class="code">`x.name`</span> 或 <span class="code">`x.balance`</span>，导致数据被篡改，甚至引发安全漏洞（如代码注入）。</span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**输入长度未验证**</span>：</span><br><span class="line"><span class="bullet">   -</span> 用户输入未检查长度和格式，容易导致意外错误。</span><br><span class="line"><span class="bullet">   -</span> 输入超长字符串或非数字字符可能导致程序逻辑混乱。</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line"><span class="section">#### <span class="strong">**如何避免安全隐患**</span></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> <span class="strong">**避免使用 `gets`**</span>：</span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span> 替换为更安全的 <span class="code">`fgets`</span> 函数。</span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span> 示例：</span><br><span class="line"></span><br></pre></td></tr></table></figure>   c复制代码fgets(x.mobile, sizeof(x.mobile), stdin);   x.mobile[strcspn(x.mobile, &quot;\n&quot;)] = &#39;\0&#39;; // 去掉末尾的换行符   <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**限制输入长度**</span>：</span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span> 确保用户输入不会超过数组的大小，并进行输入长度验证。</span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> <span class="strong">**检查输入格式**</span>：</span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span> 验证电话号码是否为数字，且长度符合要求（如11位）。</span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span> 示例：</span><br><span class="line"></span><br></pre></td></tr></table></figure>   c复制代码if (strlen(x.mobile) != 11 || strspn(x.mobile, &quot;0123456789&quot;) != 11) &#123;       printf(&quot;Invalid phone number.\n&quot;);       return 1;   &#125;   <figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4. **结构化输入处理**：</span><br><span class="line"></span><br><span class="line">   - 使用输入缓冲区，将数据解析并检查后再存入目标变量，避免直接操作目标数组。</span><br><span class="line">   </span><br><span class="line">   <span class="comment"># 实验8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 1</span></span><br><span class="line"></span><br><span class="line">打开C集成开发环境，建立一个sy8-1.cpp文件，编写一程序。要求：从键盘输入若干行字符，以“<span class="comment">#”结束，输入后把它们存储在磁盘文件“d:\data\sy8-1-out.txt”文件中。再从该文件中读取这些字符，将其中小写字母转换成大写字母后保存到磁盘文件“d:\data\sy8-1-out1.txt”文件中，同时把转换后的字符也显示在屏幕上。</span></span><br><span class="line"></span><br><span class="line">1. 首先在建立一个文本文件“d:\data\sy8-2-in.txt”文件内容如下（每个数间有一个空格）：</span><br><span class="line"></span><br><span class="line"> <span class="number"> 87 </span>80<span class="number"> 92 </span>78<span class="number"> 86 </span>95<span class="number"> 89 </span>82<span class="number"> 91 </span>83</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre></li></ul><p>#include &lt;stdio.h&gt;<br>#include &lt;ctype.h&gt;</p><p>int main() {<br>    FILE *fp_in, *fp_out;<br>    char input[1024];<br>    char ch;</p><pre><code>// 打开文件用于写入fp_in = fopen(&quot;d:\\data\\sy8-1-out.txt&quot;, &quot;w&quot;);if (fp_in == NULL) &#123;    return 1;&#125;// 从键盘输入字符并存储到文件while (fgets(input, sizeof(input), stdin)) &#123;    if (input[0] == &#39;#&#39; &amp;&amp; input[1] == &#39;\n&#39;) &#123;        break;    &#125;    fputs(input, fp_in);&#125;fclose(fp_in);// 打开文件用于读取fp_in = fopen(&quot;d:\\data\\sy8-1-out.txt&quot;, &quot;r&quot;);if (fp_in == NULL) &#123;    return 1;&#125;// 打开文件用于写入转换后的字符fp_out = fopen(&quot;d:\\data\\sy8-1-out1.txt&quot;, &quot;w&quot;);if (fp_out == NULL) &#123;    fclose(fp_in);    return 1;&#125;// 将小写字母转换为大写，并写入新文件，同时显示在屏幕上while ((ch = fgetc(fp_in)) != EOF) &#123;    if (islower(ch)) &#123;        ch = toupper(ch);    &#125;    fputc(ch, fp_out);  // 写入新文件    putchar(ch);        // 显示在屏幕&#125;// 关闭文件fclose(fp_in);fclose(fp_out);return 0;</code></pre><p>}</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">## 2</span></span><br><span class="line"></span><br><span class="line">打开<span class="type">C</span>集成开发环境，建立一个sy8-<span class="number">2</span>.cpp文件，编写一程序。要求：读取“d:\<span class="class"><span class="keyword">data</span>\sy8-2-in.txt”文件中的10个成绩，去掉最高分和最低分后计算出平均分。最后把剩下的8个成绩升序和平均分保存到磁盘文件“d:\<span class="keyword">data</span>\sy8-2-out.txt”，并在屏幕显示剩下的8个成绩升序平均分。格式如下：（每个成绩间有一个空格隔开，平均分放在第二行，平均分小数保留2位）86 87 89 91 92 </span></span><br><span class="line"></span><br><span class="line">​    <span class="number">86.25</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;</p><p>#define NUM_SCORES 10</p><p>&#x2F;&#x2F; 冒泡排序函数<br>void bubble_sort(int arr[], int n) {<br>    for (int i &#x3D; 0; i &lt; n - 1; i++) {<br>        for (int j &#x3D; 0; j &lt; n - i - 1; j++) {<br>            if (arr[j] &gt; arr[j + 1]) {<br>                int temp &#x3D; arr[j];<br>                arr[j] &#x3D; arr[j + 1];<br>                arr[j + 1] &#x3D; temp;<br>            }<br>        }<br>    }<br>}</p><p>int main() {<br>    FILE *fp_in, *fp_out;<br>    int scores[NUM_SCORES];<br>    int sum &#x3D; 0;<br>    float avg;</p><pre><code>fp_in = fopen(&quot;d:\\data\\sy8-2-in.txt&quot;, &quot;r&quot;);if (fp_in == NULL) return 1;for (int i = 0; i &lt; NUM_SCORES; i++) fscanf(fp_in, &quot;%d&quot;, &amp;scores[i]);fclose(fp_in);bubble_sort(scores, NUM_SCORES);for (int i = 1; i &lt; NUM_SCORES - 1; i++) sum += scores[i];avg = sum / 8.0;fp_out = fopen(&quot;d:\\data\\sy8-2-out.txt&quot;, &quot;w&quot;);if (fp_out == NULL) return 1;for (int i = 1; i &lt; NUM_SCORES - 1; i++) &#123;    fprintf(fp_out, &quot;%d &quot;, scores[i]);    printf(&quot;%d &quot;, scores[i]);&#125;fprintf(fp_out, &quot;\n%.2f\n&quot;, avg);printf(&quot;\n%.2f\n&quot;, avg);fclose(fp_out);return 0;</code></pre><p>}</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">## 3</span></span><br><span class="line"></span><br><span class="line">打开C集成开发环境，建立一个sy8<span class="number">-3.</span>cpp文件，编写一程序处理学生数据，学生信息包括学号（字符型，不超过<span class="number">10</span>个数字）、姓名（不超过<span class="number">10</span>个字符）、<span class="number">3</span>门课成绩（<span class="built_in">float</span>型）和平均成绩（<span class="built_in">float</span>型）。要求：定义<span class="number">6</span>个函数，分别用于从键盘输入若干学生数据并计算出平均成绩的<span class="function"><span class="keyword">void</span> <span class="title">input_data</span>(<span class="params"><span class="keyword">struct</span> student stu[ ],<span class="built_in">int</span> n</span>)函数、按平均成绩升序排序的<span class="keyword">void</span> <span class="title">sort</span>(<span class="params"><span class="keyword">struct</span> student stu[ ],<span class="built_in">int</span> n</span>)的函数、按指定文件名以二进制方式保存学生数据的<span class="keyword">void</span> <span class="title">save</span>(<span class="params"><span class="keyword">struct</span> student stu[],<span class="built_in">int</span> n,<span class="built_in">char</span> filename[]</span>)函数、用于从指定文件中以二进制方式读取学生数据并返回记录数n的<span class="built_in">int</span> <span class="title">read</span>(<span class="params"><span class="keyword">struct</span> student stu[], <span class="built_in">char</span> filename[]</span>)函数、以及插入指定学生数据后仍保持平均分升序并返回人数的<span class="built_in">int</span> <span class="title">insert</span>(<span class="params"><span class="keyword">struct</span> student stu[],<span class="built_in">int</span> n,<span class="keyword">struct</span> student x</span>)函数和输出数据<span class="keyword">void</span> <span class="title">print_data</span>(<span class="params"><span class="keyword">struct</span> student stu[ ],<span class="built_in">int</span> n</span>)；最后在main函数中输入学生人数n，依次调用<span class="title">input_data</span>(<span class="params">stu,n</span>)、<span class="title">sort</span>(<span class="params">stu,n</span>)、<span class="title">save</span>(<span class="params">stu,n,”d:\data\sy8<span class="number">-3</span>-<span class="keyword">in</span>.txt”</span>)、<span class="title">print_data</span>(<span class="params">stu,n</span>)；再输入一个学生数据x，接着依次调用<span class="title">insert</span>(<span class="params">stu,n,x</span>)、<span class="title">save</span>(<span class="params">stu,n,”d:\data\sy8<span class="number">-3</span>-<span class="keyword">out</span>.txt”</span>)、n</span>=read(stu,”d:\data\sy8<span class="number">-3</span>-<span class="keyword">out</span>.txt”)和print_data(stu,n)函数。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#include &lt;stdio.h&gt;<br>#include &lt;string.h&gt;</p><p>#define MAX_STUDENTS 100</p><p>&#x2F;&#x2F; 学生数据结构<br>struct student {<br>    char id[11];         &#x2F;&#x2F; 学号<br>    char name[11];       &#x2F;&#x2F; 姓名<br>    float scores[3];     &#x2F;&#x2F; 3门课程成绩<br>    float avg;           &#x2F;&#x2F; 平均成绩<br>};</p><p>&#x2F;&#x2F; 从键盘输入学生数据并计算平均成绩<br>void input_data(struct student stu[], int n) {<br>    for (int i &#x3D; 0; i &lt; n; i++) {<br>        scanf(“%s%s”, stu[i].id, stu[i].name);<br>        float total &#x3D; 0;<br>        for (int j &#x3D; 0; j &lt; 3; j++) {<br>            scanf(“%f”, &amp;stu[i].scores[j]);<br>            total +&#x3D; stu[i].scores[j];<br>        }<br>        stu[i].avg &#x3D; total &#x2F; 3.0;<br>    }<br>}</p><p>&#x2F;&#x2F; 按平均成绩升序排序<br>void sort(struct student stu[], int n) {<br>    for (int i &#x3D; 0; i &lt; n - 1; i++) {<br>        for (int j &#x3D; 0; j &lt; n - i - 1; j++) {<br>            if (stu[j].avg &gt; stu[j + 1].avg) {<br>                struct student temp &#x3D; stu[j];<br>                stu[j] &#x3D; stu[j + 1];<br>                stu[j + 1] &#x3D; temp;<br>            }<br>        }<br>    }<br>}</p><p>&#x2F;&#x2F; 保存学生数据到指定文件<br>void save(struct student stu[], int n, char filename[]) {<br>    FILE *fp &#x3D; fopen(filename, “wb”);<br>    if (fp !&#x3D; NULL) {<br>        fwrite(stu, sizeof(struct student), n, fp);<br>        fclose(fp);<br>    }<br>}</p><p>&#x2F;&#x2F; 从指定文件中读取学生数据并返回人数<br>int read(struct student stu[], char filename[]) {<br>    FILE *fp &#x3D; fopen(filename, “rb”);<br>    if (fp !&#x3D; NULL) {<br>        int n &#x3D; fread(stu, sizeof(struct student), MAX_STUDENTS, fp);<br>        fclose(fp);<br>        return n;<br>    }<br>    return 0;<br>}</p><p>&#x2F;&#x2F; 插入学生数据并保持平均成绩升序<br>int insert(struct student stu[], int n, struct student x) {<br>    int i &#x3D; n - 1;<br>    while (i &gt;&#x3D; 0 &amp;&amp; stu[i].avg &gt; x.avg) {<br>        stu[i + 1] &#x3D; stu[i];<br>        i–;<br>    }<br>    stu[i + 1] &#x3D; x;<br>    return n + 1;<br>}</p><p>&#x2F;&#x2F; 输出学生数据<br>void print_data(struct student stu[], int n) {<br>    for (int i &#x3D; 0; i &lt; n; i++) {<br>        printf(“%s %s %.2f %.2f %.2f %.2f\n”, stu[i].id, stu[i].name,<br>               stu[i].scores[0], stu[i].scores[1], stu[i].scores[2], stu[i].avg);<br>    }<br>}</p><p>&#x2F;&#x2F; 主函数<br>int main() {<br>    struct student stu[MAX_STUDENTS], x;<br>    int n;</p><pre><code>// 输入学生人数和数据scanf(&quot;%d&quot;, &amp;n);input_data(stu, n);sort(stu, n);save(stu, n, &quot;d:\\data\\sy8-3-in.txt&quot;);print_data(stu, n);// 输入新学生数据并插入scanf(&quot;%s%s&quot;, x.id, x.name);float total = 0;for (int i = 0; i &lt; 3; i++) &#123;    scanf(&quot;%f&quot;, &amp;x.scores[i]);    total += x.scores[i];&#125;x.avg = total / 3.0;n = insert(stu, n, x);save(stu, n, &quot;d:\\data\\sy8-3-out.txt&quot;);n = read(stu, &quot;d:\\data\\sy8-3-out.txt&quot;);print_data(stu, n);return 0;</code></pre><p>}</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">## 4 </span></span><br><span class="line"></span><br><span class="line">打开C集成开发环境，建立一个sy8<span class="number">-4.</span>cpp文件，编写一程序。要求：使用链表操作学生信息（<span class="keyword">struct</span> student结构体包括学号（字符型，不超过<span class="number">10</span>个数字）、姓名（不超过<span class="number">10</span>个字符）、<span class="number">3</span>门课成绩（<span class="built_in">float</span>型）和平均成绩（<span class="built_in">float</span>型）），先定义<span class="number">2</span>个函数，分别用于从二进制文件读取学生数据创建链表（头插法）的<span class="keyword">struct</span> node*create(<span class="built_in">char</span> filename[])函数和输出链表中学生数据的<span class="function"><span class="keyword">void</span> <span class="title">print</span>(<span class="params"><span class="keyword">struct</span> node *h</span>)函数，最后在main函数中以“d:\data\sy8-3-<span class="keyword">out</span>.txt”文件名作为参数调用<span class="title">create</span>()创建链表和调用<span class="title">print</span>()函数输出学生数据。</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><p>#include &lt;stdio.h&gt;<br>#include &lt;stdlib.h&gt;<br>#include &lt;string.h&gt;</p><p>&#x2F;&#x2F; 定义学生信息结构体<br>struct student {<br>    char id[11];         &#x2F;&#x2F; 学号<br>    char name[11];       &#x2F;&#x2F; 姓名<br>    float scores[3];     &#x2F;&#x2F; 3门课程成绩<br>    float avg;           &#x2F;&#x2F; 平均成绩<br>};</p><p>&#x2F;&#x2F; 定义链表节点结构体<br>struct node {<br>    struct student data;<br>    struct node *next;<br>};</p><p>&#x2F;&#x2F; 从二进制文件读取学生数据并创建链表（头插法）<br>struct node* create(char filename[]) {<br>    FILE *fp &#x3D; fopen(filename, “rb”);<br>    if (!fp) {<br>        perror(“File open failed”);<br>        return NULL;<br>    }</p><pre><code>struct node *head = NULL; // 初始化头指针struct student temp;while (fread(&amp;temp, sizeof(struct student), 1, fp)) &#123;    // 创建新节点    struct node *new_node = (struct node *)malloc(sizeof(struct node));    if (!new_node) &#123;        perror(&quot;Memory allocation failed&quot;);        fclose(fp);        return NULL;    &#125;    new_node-&gt;data = temp;    new_node-&gt;next = head; // 头插法插入链表    head = new_node;&#125;fclose(fp);return head;</code></pre><p>}</p><p>&#x2F;&#x2F; 输出链表中学生数据<br>void print(struct node *h) {<br>    struct node *p &#x3D; h;<br>    while (p) {<br>        struct student *stu &#x3D; &amp;p-&gt;data;<br>        printf(“%s %s %.2f %.2f %.2f %.2f\n”,<br>               stu-&gt;id, stu-&gt;name, stu-&gt;scores[0], stu-&gt;scores[1], stu-&gt;scores[2], stu-&gt;avg);<br>        p &#x3D; p-&gt;next;<br>    }<br>}</p><p>&#x2F;&#x2F; 主函数<br>int main() {<br>    struct node *head &#x3D; create(“d:\data\sy8-3-out.txt”);<br>    if (head) {<br>        print(head);<br>    }<br>    return 0;<br>}</p><figure class="highlight stan"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 5</span></span><br><span class="line"></span><br><span class="line">试分析以下程序段可能发生的安全隐患，应如何避免。程序试图从输入行中删去最后的换行符（\n）。fgets()函数通常用于从流中读取以换行符结束的输入行。它以目标缓冲区的大小（<span class="built_in">size</span>）作为参数，至多从流中复制<span class="built_in">size</span>-<span class="number">1</span>个字符到字符数组。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#include &lt;stdio.h&gt;</p><p>#include &lt;string.h&gt;</p><p>enum {BUFFER_SIZE&#x3D;1024};</p><p>void fun()</p><p>{</p><p>​    char buf[BUFFER_SIZE];</p><p>​    if(fgets(buf,sizeof(buf),stdin)&#x3D;&#x3D;NULL)</p><p>​         printf(“Read error!”);</p><p>​    buf[strlen(buf)-1]&#x3D;’\0’;</p><p>}</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">### 安全增强措施：</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> <span class="strong">**检查输入是否为空**</span>：</span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span> 在 <span class="code">`fgets()`</span> 成功返回后，计算字符串长度，确保其非空。</span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="strong">**验证换行符的存在**</span>：</span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span> 使用条件 <span class="code">`buf[len - 1] == &#x27;\n&#x27;`</span> 判断最后一个字符是否为换行符。</span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> <span class="strong">**避免未定义行为**</span>：</span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span> 在输入为空时（<span class="code">`strlen(buf) == 0`</span>），避免对 <span class="code">`buf[-1]`</span> 进行访问。</span><br><span class="line"></span><br><span class="line"><span class="bullet">4.</span> <span class="strong">**处理超长输入**</span>：</span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span> 如果输入行的长度超出 <span class="code">`BUFFER_SIZE - 1`</span>，换行符可能被截断，可以根据需求进一步处理超长输入行。</span><br><span class="line"></span><br><span class="line"><span class="bullet">5.</span> <span class="strong">**错误处理**</span>：</span><br><span class="line"></span><br><span class="line"><span class="bullet">   -</span> 在 <span class="code">`fgets()`</span> 返回 <span class="code">`NULL`</span> 时，立即返回并避免后续对未初始化缓冲区的操作。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>   #include &lt;stdio.h&gt;<br>   #include &lt;string.h&gt;</p><p>   enum {BUFFER_SIZE &#x3D; 1024};</p><p>   void fun() {<br>       char buf[BUFFER_SIZE];</p><pre><code>   if (fgets(buf, sizeof(buf), stdin) == NULL) &#123;       printf(&quot;Read error or EOF!\n&quot;);       return;  // 防止后续操作未初始化的 buf   &#125;   size_t len = strlen(buf);   // 如果输入不为空且最后一个字符是换行符，则移除它   if (len &gt; 0 &amp;&amp; buf[len - 1] == &#39;\n&#39;) &#123;       buf[len - 1] = &#39;\0&#39;;   &#125;   printf(&quot;Processed input: %s\n&quot;, buf);</code></pre><p>   }</p><pre><code># 实验七，八漏洞分析## 七答：gets(),strcpy,scanf(&quot;%s&quot;,x)等均是不安全函数因币值balance的内存空间紧跟电话mobile后，若输入超长电话号码将覆盖币值数据。建议把gets(x.mobile);改为gets_s(x.mobile,11)。对于字符串输入建议使用scanf_s和gets_s函数；strcpy()建议使用strncpy()或strcpy_s()具体：**运行结果分析**1. 输入正常电话号码（如 `13812345678`）：程序能够正常运行，输出更新后的电话号码，其他数据不受影响。2. 输入超长电话号码（如 `15个1`）：会导致**缓冲区溢出**，覆盖内存中的其他数据，可能导致程序崩溃、数据异常，甚至引发安全漏洞。------### **程序存在的安全隐患**1. **`gets` 的使用问题**:- **`gets` 不安全**：`gets` 不会限制输入的长度，如果输入超出缓冲区大小，就会发生缓冲区溢出。- 在这段代码中，`x.mobile` 的大小为 12 字节，而 `gets(x.mobile)` 没有限制输入长度。如果用户输入超过 12 个字符，就会覆盖结构体的其他成员变量甚至引发未定义行为。2. **缓冲区溢出**:- 当用户输入超长字符串时，会覆盖内存中的其他数据，例如 `x.balance` 或 `x.name` 的值可能被破坏。- 严重时，还可能覆盖返回地址，造成代码执行的偏移或被攻击者利用（例如注入恶意代码）。3. **潜在的安全威胁**:- 缓冲区溢出漏洞可以被恶意利用，导致程序崩溃或攻击者获取系统控制权。- 这是许多历史著名攻击（如 Morris 蠕虫、Blaster 蠕虫等）的基础。## 八答：strlen()函数通过确定NULL结束符之前的字符数确定字符串长度。如果fgets()从输入中读取的第一个字符恰好是个NULL字符，则出现错误。例如，如果fgets调用读取的是一个二进制数据文件，就可能发生这种情况。如果buf中的第一个字符是NULL字符，strlen(buf)返回0、表达式strlen(buf)-1回绕为一个大的正数，发生写入数组范围之外的错误。解决方案使用strchr()代替字符串中的换行符（如果存在）具体：**1. 潜在的安全隐患**1. **数组越界问题**:   - 如果输入为空（例如用户直接按 `Enter` 或输入文件末尾 EOF），则 `fgets` 会将 `buf` 填充为一个空字符串 `&quot;&quot;`。   - 此时 `strlen(buf)` 的结果是 `0`，代码中的 `buf[strlen(buf) - 1] = &#39;\0&#39;` 会导致数组越界访问（`buf[-1]`），引发未定义行为。2. **未检查换行符是否存在**:   - 如果输入的行过长（超过 `BUFFER_SIZE-1`），`fgets` 会读取部分数据并截断，且输入中可能不包含换行符。此时，`buf[strlen(buf) - 1]` 的操作可能错误地删除一个有效字符。3. **未处理 `fgets` 返回 NULL 的情况**:   - 如果 `fgets` 返回 `NULL`（如遇到文件结束或读取错误），`buf` 的内容是未定义的，此时不应该继续对 `buf` 操作，否则可能会导致错误。------### **如何避免隐患**1. **检查输入是否为空**:   - 在访问 `buf[strlen(buf) - 1]` 之前，需要确保 `buf` 不为空字符串。2. **验证换行符是否存在**:   - 在试图删除换行符之前，检查输入是否包含换行符，确保代码逻辑正确。3. **处理 `fgets` 返回值**:   - 如果 `fgets` 返回 `NULL`，应该直接返回或处理错误，而不是继续操作未定义的 `buf`。</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>编程作业1</title>
      <link href="/2024/11/04/%E7%BC%96%E7%A8%8B%E4%BD%9C%E4%B8%9A1/"/>
      <url>/2024/11/04/%E7%BC%96%E7%A8%8B%E4%BD%9C%E4%B8%9A1/</url>
      
        <content type="html"><![CDATA[<h2 id="1、【程序文件名】zy1-1-cpp"><a href="#1、【程序文件名】zy1-1-cpp" class="headerlink" title="1、【程序文件名】zy1-1.cpp"></a>1、【程序文件名】zy1-1.cpp</h2><p>【题目描述】编写一个程序，功能是：输入一个3位的正整数，逆序输出。如输入：345，则输出：543，输入：530，则输出：035。</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> a，b，c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c%c%c&quot;</span>, &amp;a，&amp;b，&amp;c）;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c&quot;</span>, a, b, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、【程序文件名】zy1-2-cpp"><a href="#2、【程序文件名】zy1-2-cpp" class="headerlink" title="2、【程序文件名】zy1-2.cpp"></a>2、【程序文件名】zy1-2.cpp</h2><p>【题目描述】编写一个程序，功能是：输入一个字母，若是大写字母直接输出，若输入小写字母输出它对应的大写字母。如输入：B，则输出：B，输入：d，则输出：D。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> letter;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;letter);</span><br><span class="line">    <span class="type">char</span> result = (letter &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; letter &lt;= <span class="string">&#x27;z&#x27;</span>) ? (letter - <span class="string">&#x27;a&#x27;</span> + <span class="string">&#x27;A&#x27;</span>) : letter;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、【程序文件名】zy1-3-cpp"><a href="#3、【程序文件名】zy1-3-cpp" class="headerlink" title="3、【程序文件名】zy1-3.cpp"></a>3、【程序文件名】zy1-3.cpp</h2><p>【题目描述】编写一个程序，功能是：输入一个正整数（占4个字节），输出右边第2字节的值。如输入：255，则输出：0；输入：256，输出：1；输入：16666，输出：65。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%u&quot;</span>, &amp;num);</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> second_byte = (num &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%u&quot;</span>, second_byte);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>编程作业3</title>
      <link href="/2024/11/04/%E7%BC%96%E7%A8%8B%E4%BD%9C%E4%B8%9A3/"/>
      <url>/2024/11/04/%E7%BC%96%E7%A8%8B%E4%BD%9C%E4%B8%9A3/</url>
      
        <content type="html"><![CDATA[<h2 id="1、【程序文件名】zy2-1-cpp"><a href="#1、【程序文件名】zy2-1-cpp" class="headerlink" title="1、【程序文件名】zy2-1.cpp"></a>1、【程序文件名】zy2-1.cpp</h2><p>【题目描述】编写一程序，功能是：输入一个百分制成绩（正整数），输出成绩等级A、B、C、D、E。其中90分以上为A、80<del>89为B、70</del>79为C、60~69为D、小于60分为E。用if语句实现。例如：输入：90，输出：A；输入68，输出：D；输出15，输出：E。</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;score);</span><br><span class="line">    <span class="keyword">if</span> (score &gt;= <span class="number">90</span> &amp;&amp; score &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">70</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;E&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2、【程序文件名】zy2-2-cpp"><a href="#2、【程序文件名】zy2-2-cpp" class="headerlink" title="2、【程序文件名】zy2-2.cpp"></a>2、【程序文件名】zy2-2.cpp</h2><p>【题目描述】编写一程序，功能是：输入一个百分制成绩（正整数），输出成绩等级A、B、C、D、E。其中90分以上为A、80<del>89为B、70</del>79为C、60~69为D、小于60分为E。用switch语句实现。例如：输入：90，输出：A；输入68，输出：D；输出15，输出：E。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;score);</span><br><span class="line">    <span class="type">char</span> grade;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (score / <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            grade = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            grade = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            grade = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            grade = <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            grade = <span class="string">&#x27;E&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, grade);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、【程序文件名】zy2-3-cpp"><a href="#3、【程序文件名】zy2-3-cpp" class="headerlink" title="3、【程序文件名】zy2-3.cpp"></a>3、【程序文件名】zy2-3.cpp</h2><p>【题目描述】编写一程序，功能是：输入4个整数，要求按从小到大的顺序输出这4个数。（输出数据以1个空格隔开）。注：不能使用数组。例如：输入：3 1 6 4，输出：1 3 4 6；输入：67 100 31 67，输出：31 67 67 100。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main() &#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, c, d;</span><br><span class="line">    scanf(<span class="string">&quot;<span class="variable">%d</span> <span class="variable">%d</span> <span class="variable">%d</span> <span class="variable">%d</span>&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) &#123; </span><br><span class="line"><span class="keyword">int</span> temp = a; a = b; b = temp; </span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; c) &#123; </span><br><span class="line"><span class="keyword">int</span> temp = a; a = c; c = temp; </span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; d) &#123; </span><br><span class="line"><span class="keyword">int</span> temp = a; a = d; d = temp; </span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span> (b &gt; c) &#123; </span><br><span class="line"><span class="keyword">int</span> temp = b; b = c; c = temp; </span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span> (b &gt; d) &#123;</span><br><span class="line"> <span class="keyword">int</span> temp = b; b = d; d = temp; </span><br><span class="line"> &#125;</span><br><span class="line">    <span class="keyword">if</span> (c &gt; d) &#123; </span><br><span class="line"><span class="keyword">int</span> temp = c; c = d; d = temp; </span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">printf</span>(<span class="string">&quot;<span class="variable">%d</span> <span class="variable">%d</span> <span class="variable">%d</span> <span class="variable">%d</span>&quot;</span>, a, b, c, d);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="4、【程序文件名】zy2-4-cpp"><a href="#4、【程序文件名】zy2-4-cpp" class="headerlink" title="4、【程序文件名】zy2-4.cpp"></a>4、【程序文件名】zy2-4.cpp</h2><p>【题目描述】编写一程序，功能是：求1~n中所有偶数之和，其中，n由键盘输入。例如：输入：10，输出：30；输入：50，输出：650；输入：100，输出：2550。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i += <span class="number">2</span>) &#123;</span><br><span class="line">        sum += i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>编程作业2</title>
      <link href="/2024/11/04/%E7%BC%96%E7%A8%8B%E4%BD%9C%E4%B8%9A2/"/>
      <url>/2024/11/04/%E7%BC%96%E7%A8%8B%E4%BD%9C%E4%B8%9A2/</url>
      
        <content type="html"><![CDATA[<h2 id="1、【程序文件名】zy-1-cpp"><a href="#1、【程序文件名】zy-1-cpp" class="headerlink" title="1、【程序文件名】zy-1.cpp"></a>1、【程序文件名】zy-1.cpp</h2><p>【题目描述】编写一个程序，功能是：输入两个整数，变量值交换后输出，输出时两个整数间用一个空格隔开。如输入：12 34，则输出：34 12</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> num1, num2, temp;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;num1, &amp;num2);</span><br><span class="line">    temp = num1; </span><br><span class="line">    num1 = num2; </span><br><span class="line">    num2 = temp; </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, num1, num2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、【程序文件名】zy-2-cpp"><a href="#2、【程序文件名】zy-2-cpp" class="headerlink" title="2、【程序文件名】zy-2.cpp"></a>2、【程序文件名】zy-2.cpp</h2><p>【题目描述】编写一个程序，功能是：求<br>$$<br>√(|x^3-5| )&#x2F;(e^x+3)。<br>$$<br>。其中，x为浮点数，由键盘输入。计算后输出y的值（显示两位小数)。如输入：3.5，则输出：0.17，输入：-1.2，则输出：0.79。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">float</span> x, y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;x);</span><br><span class="line">    y = <span class="built_in">sqrt</span>(<span class="built_in">fabs</span>(<span class="built_in">pow</span>(x, <span class="number">3</span>) - <span class="number">5</span>)) / (<span class="built_in">exp</span>(x) + <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, y);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、【程序文件名】zy-3-cpp"><a href="#3、【程序文件名】zy-3-cpp" class="headerlink" title="3、【程序文件名】zy-3.cpp"></a>3、【程序文件名】zy-3.cpp</h3><p>【题目描述】编写一个程序，功能是：输入一个年份，判断它是否为闰年。其中，闰年的年份满足以下两个条件之一：一是能被400整除；二是能被4整除，但不能被100整除。如输入：2024，则输出：Y；输入：2022，输出：N。</p><p>  要求：使用条件运算符，不使用if语句。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;year);</span><br><span class="line">    <span class="type">char</span> isLeapYear = (year % <span class="number">400</span> == <span class="number">0</span> || (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>)) ? <span class="string">&#x27;Y&#x27;</span> : <span class="string">&#x27;N&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, isLeapYear);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建</title>
      <link href="/2024/10/12/%E6%96%87%E7%AB%A0/"/>
      <url>/2024/10/12/%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建心路"><a href="#搭建心路" class="headerlink" title="搭建心路"></a>搭建心路</h1><span id="more"></span><h2 id="一、准备工具-环境"><a href="#一、准备工具-环境" class="headerlink" title="一、准备工具&#x2F;环境"></a>一、准备工具&#x2F;环境</h2><p>  一个趁手的魔法上网工具（GitHub真的好慢），node.js，hexo，typora，git（这玩意官网下也好慢）</p><h2 id="二、博客的搭建"><a href="#二、博客的搭建" class="headerlink" title="二、博客的搭建"></a>二、博客的搭建</h2><p>  工欲善其事，必先利其器。为了流畅且丝滑的搭建博客，我浏览了一些B站视频，并从中选取了最短的一个来作为学习模板（懒狗一条了属于是）。在搭建过程中仅有一次报错，为“error deployer not found: git“，在 csdn上了解到，这是由于没有安装hexo-deployer-git插件，根据网址的教学运行npm install hexo-deployer-git –save便成功解决</p><p>  搭建过程中并没有截什么图，便自然只有文字了</p><h2 id="三、搭建过程"><a href="#三、搭建过程" class="headerlink" title="三、搭建过程"></a>三、搭建过程</h2><p>  1.安装所需软件并配置环境</p><p>  2.去GitHub白嫖免费服务器并搞定ssh链接</p><p> 3.更改一些_config.yaml下的配置</p><p> 4.改个主题并部署网页</p><h2 id="四、参考的视频以及文章"><a href="#四、参考的视频以及文章" class="headerlink" title="四、参考的视频以及文章"></a>四、参考的视频以及文章</h2><p>参考的视频以及文章</p><p>  感谢各位前辈留下的宝贵资料</p><p><a href="https://blog.csdn.net/qq_41688840/article/details/125826614">部署hexo遇到报错ERROR Deployer not found: git的解决办法-CSDN博客</a></p><p>[<a href="https://www.bilibili.com/video/BV1Eg41157tL/?spm_id_from=333.337.search-card.all.click&vd_source=0a239ca12066e72b92ef0094a8ca6ef0">教程]Hexo &amp; Github搭建自己的专属博客_哔哩哔哩_bilibili</a></p><h2 id="五、在搭建博客中有感"><a href="#五、在搭建博客中有感" class="headerlink" title="五、在搭建博客中有感"></a>五、在搭建博客中有感</h2><p>  博客的搭建需要一些耐心和善用搜索引擎，大部分问题前人都给了详尽的回答，我们只需要站在巨人的肩膀上，到虽然我没有遇到多少报错，但是从帮助舍友搭建博客时来看，几乎现阶段能遇到的所有报错都可以在网上找到解决方式，甚至有的报错只需要翻译一下就能看懂错在哪里。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机</title>
      <link href="/2024/10/12/%E9%A6%96%E9%A1%B5/"/>
      <url>/2024/10/12/%E9%A6%96%E9%A1%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机的搭建"><a href="#虚拟机的搭建" class="headerlink" title="虚拟机的搭建"></a>虚拟机的搭建</h1><span id="more"></span><h2 id="一、准备软件-安装包"><a href="#一、准备软件-安装包" class="headerlink" title="一、准备软件\安装包"></a>一、准备软件\安装包</h2><p> VMware，ubuntu，kali，ctfos（B站看到了就随手搞了）</p><h2 id="二、搭建过程"><a href="#二、搭建过程" class="headerlink" title="二、搭建过程"></a>二、搭建过程</h2><p> 1.下载对应软件及系统iso文件</p><p> 2.新建虚拟机，按照引导进行配置，分盘，安装</p><p> 3.拍摄快照，便于以后可以遇到问题不用重装系统（省内存哈哈哈）</p><h4 id="ctfos"><a href="#ctfos" class="headerlink" title="ctfos"></a>ctfos</h4><p>ctfos的安装小有不同，只需要直接打开.ovf文件即可</p><h2 id="三、搭建结果"><a href="#三、搭建结果" class="headerlink" title="三、搭建结果"></a>三、搭建结果</h2><p><img src="https://p.sda1.dev/19/109c3dac1c57f5c749dd011c95c8f8b1/kali.png"></p><p><img src="https://p.sda1.dev/19/9ac69690bc530b9566822a120b9d490c/ctfos.png"></p><p><img src="https://p.sda1.dev/19/3b52bc0bd23513b9e5d3fbb14371c70e/ub.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/10/12/%E6%B5%8B%E8%AF%95/"/>
      <url>/2024/10/12/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>title: 测试<br>date: 2024-10-12 23:32:22<br>tags:text</p><p>仅为测试使用</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/09/08/hello-world/"/>
      <url>/2024/09/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><span id="more"></span><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
